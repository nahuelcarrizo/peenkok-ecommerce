{
  "version": 3,
  "sources": ["../../../lodash/isNumber.js", "../../../lodash/camelCase.js", "../../../lodash/kebabCase.js", "../../../toggle-selection/index.js", "../../../copy-to-clipboard/index.js", "../../../react-copy-to-clipboard/lib/Component.js", "../../../react-copy-to-clipboard/lib/index.js", "../../../sanity/src/desk/components/DocTitle.tsx", "../../../sanity/src/desk/components/TimeAgo.tsx", "../../../sanity/src/desk/components/confirmDeleteDialog/useReferringDocuments.ts", "../../../sanity/src/desk/components/PublishedStatus.tsx", "../../../sanity/src/desk/components/DraftStatus.tsx", "../../../sanity/src/desk/components/paneItem/PaneItemPreview.tsx", "../../../sanity/src/desk/components/paneRouter/PaneRouterContext.tsx", "../../../sanity/src/desk/components/paneRouter/BackLink.tsx", "../../../sanity/src/desk/components/paneRouter/ChildLink.tsx", "../../../sanity/src/desk/components/paneRouter/ReferenceChildLink.tsx", "../../../sanity/src/desk/components/paneRouter/ParameterizedLink.tsx", "../../../sanity/src/desk/components/paneRouter/usePaneRouter.ts", "../../../sanity/src/desk/components/confirmDeleteDialog/ReferencePreviewLink.tsx", "../../../sanity/src/desk/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx", "../../../sanity/src/desk/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx", "../../../sanity/src/desk/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx", "../../../sanity/src/desk/components/confirmDeleteDialog/index.tsx", "../../../sanity/src/desk/components/pane/PaneContextMenuButton.tsx", "../../../sanity/src/desk/components/pane/constants.ts", "../../../sanity/src/desk/components/pane/PaneContext.ts", "../../../sanity/src/desk/components/pane/PaneLayoutContext.ts", "../../../sanity/src/desk/components/pane/usePaneLayout.ts", "../../../sanity/src/desk/components/pane/PaneDivider.tsx", "../../../sanity/src/desk/components/pane/Pane.tsx", "../../../sanity/src/desk/components/pane/usePane.ts", "../../../sanity/src/desk/components/pane/PaneContent.styles.tsx", "../../../sanity/src/desk/components/pane/PaneContent.tsx", "../../../sanity/src/desk/components/pane/PaneFooter.styles.tsx", "../../../sanity/src/desk/components/pane/PaneFooter.tsx", "../../../sanity/src/desk/components/pane/PaneHeader.styles.tsx", "../../../sanity/src/desk/components/pane/PaneHeader.tsx", "../../../sanity/src/desk/components/pane/PaneLayout.styles.tsx", "../../../sanity/src/desk/components/IntentButton.tsx", "../../../sanity/src/desk/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx", "../../../sanity/src/desk/components/paneHeaderActions/PaneHeaderCreateButton.tsx", "../../../sanity/src/desk/components/paneHeaderActions/PaneHeaderActions.tsx", "../../../sanity/src/desk/documentActions/DeleteAction.tsx", "../../../sanity/src/desk/documentActions/DiscardChangesAction.tsx", "../../../sanity/src/desk/documentActions/DuplicateAction.tsx", "../../../sanity/src/desk/documentActions/HistoryRestoreAction.tsx", "../../../sanity/src/desk/panes/document/DocumentPaneContext.ts", "../../../sanity/src/desk/panes/document/useDocumentPane.tsx", "../../../sanity/src/desk/documentActions/PublishAction.tsx", "../../../sanity/src/desk/documentActions/UnpublishAction.tsx", "../../../sanity/src/desk/documentBadges/LiveEditBadge.ts", "../../../sanity/src/desk/constants.ts", "../../../sanity/src/desk/getIntentState.ts", "../../../sanity/src/desk/router.ts", "../../../sanity/src/desk/deskTool.ts", "../../../sanity/src/desk/DeskToolContext.ts", "../../../sanity/src/desk/structureBuilder/SerializeError.ts", "../../../sanity/src/desk/structureBuilder/util/getExtendedProjection.ts", "../../../sanity/src/desk/structureBuilder/Sort.ts", "../../../sanity/src/desk/structureBuilder/MenuItem.ts", "../../../sanity/src/desk/structureBuilder/MenuItemGroup.ts", "../../../sanity/src/desk/structureBuilder/util/validateId.ts", "../../../sanity/src/desk/structureBuilder/util/getStructureNodeId.ts", "../../../sanity/src/desk/structureBuilder/Component.ts", "../../../sanity/src/desk/structureBuilder/util/resolveTypeForDocument.ts", "../../../sanity/src/desk/structureBuilder/views/View.ts", "../../../sanity/src/desk/structureBuilder/views/ComponentView.ts", "../../../sanity/src/desk/structureBuilder/views/FormView.ts", "../../../sanity/src/desk/structureBuilder/views/index.ts", "../../../sanity/src/desk/structureBuilder/Document.ts", "../../../sanity/src/desk/structureBuilder/Layout.ts", "../../../sanity/src/desk/structureBuilder/Intent.ts", "../../../sanity/src/desk/structureBuilder/InitialValueTemplateItem.ts", "../../../sanity/src/desk/structureBuilder/GenericList.ts", "../../../sanity/src/desk/structureBuilder/DocumentList.ts", "../../../sanity/src/desk/structureBuilder/List.ts", "../../../sanity/src/desk/structureBuilder/ListItem.ts", "../../../sanity/src/desk/structureBuilder/DocumentListItem.ts", "../../../sanity/src/desk/structureBuilder/DocumentTypeList.ts", "../../../sanity/src/desk/structureBuilder/documentTypeListItems.ts", "../../../sanity/src/desk/structureBuilder/createStructureBuilder.ts", "../../../sanity/src/desk/DeskToolProvider.tsx"],
  "sourcesContent": ["var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n", "var capitalize = require('./capitalize'),\n    createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\nmodule.exports = camelCase;\n", "var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n", "\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n", "\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n", "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CopyToClipboard = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _copyToClipboard = _interopRequireDefault(require(\"copy-to-clipboard\"));\n\nvar _excluded = [\"text\", \"onCopy\", \"options\", \"children\"];\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CopyToClipboard = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CopyToClipboard, _React$PureComponent);\n\n  var _super = _createSuper(CopyToClipboard);\n\n  function CopyToClipboard() {\n    var _this;\n\n    _classCallCheck(this, CopyToClipboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"onClick\", function (event) {\n      var _this$props = _this.props,\n          text = _this$props.text,\n          onCopy = _this$props.onCopy,\n          children = _this$props.children,\n          options = _this$props.options;\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      var result = (0, _copyToClipboard[\"default\"])(text, options);\n\n      if (onCopy) {\n        onCopy(text, result);\n      } // Bypass onClick if it was present\n\n\n      if (elem && elem.props && typeof elem.props.onClick === 'function') {\n        elem.props.onClick(event);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CopyToClipboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          _text = _this$props2.text,\n          _onCopy = _this$props2.onCopy,\n          _options = _this$props2.options,\n          children = _this$props2.children,\n          props = _objectWithoutProperties(_this$props2, _excluded);\n\n      var elem = _react[\"default\"].Children.only(children);\n\n      return /*#__PURE__*/_react[\"default\"].cloneElement(elem, _objectSpread(_objectSpread({}, props), {}, {\n        onClick: this.onClick\n      }));\n    }\n  }]);\n\n  return CopyToClipboard;\n}(_react[\"default\"].PureComponent);\n\nexports.CopyToClipboard = CopyToClipboard;\n\n_defineProperty(CopyToClipboard, \"defaultProps\", {\n  onCopy: undefined,\n  options: undefined\n});", "\"use strict\";\n\nvar _require = require('./Component'),\n    CopyToClipboard = _require.CopyToClipboard;\n\nCopyToClipboard.CopyToClipboard = CopyToClipboard;\nmodule.exports = CopyToClipboard;", "import {SanityDocumentLike} from '@sanity/types'\nimport React from 'react'\nimport {useSchema, unstable_useValuePreview as useValuePreview} from 'sanity'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n\n  const {error, value} = useValuePreview({\n    schemaType: schemaType!,\n    value: documentValue,\n  })\n\n  if (!schemaType) {\n    return <code>Unknown schema type: {documentValue._type}</code>\n  }\n\n  if (error) {\n    return <>Error: {error.message}</>\n  }\n\n  return <>{value?.title || <span style={{color: 'var(--card-muted-fg-color)'}}>Untitled</span>}</>\n}\n", "import React from 'react'\nimport {useTimeAgo} from 'sanity'\n\nexport interface TimeAgoProps {\n  time: string | Date\n}\n\nexport function TimeAgo({time}: TimeAgoProps) {\n  const timeAgo = useTimeAgo(time)\n\n  return <span title={timeAgo}>{timeAgo} ago</span>\n}\n", "import {useMemo} from 'react'\nimport {ClientError, SanityClient} from '@sanity/client'\nimport {Observable, timer, fromEvent, EMPTY, of} from 'rxjs'\nimport {\n  map,\n  startWith,\n  distinctUntilChanged,\n  switchMap,\n  shareReplay,\n  catchError,\n} from 'rxjs/operators'\nimport {\n  AvailabilityResponse,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  DocumentStore,\n  useDocumentStore,\n  createHookFromObservableFactory,\n  getDraftId,\n  getPublishedId,\n  useClient,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY\n      ),\n      shareReplay({refCount: true, bufferSize: 1})\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient}\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    })\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient}\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          })\n        )\n    })\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000}\n    ) as Observable<ReferringDocuments['internalReferences']>\n  }\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        })\n      )\n    )\n  }\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId])\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient])\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean)\n      )\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== '')\n      )\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string'\n      )\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n", "import React from 'react'\nimport {PublishIcon} from '@sanity/icons'\nimport {PreviewValue, SanityDocument} from '@sanity/types'\nimport {Box, Text, Tooltip} from '@sanity/ui'\nimport {TimeAgo} from './TimeAgo'\nimport {TextWithTone} from 'sanity'\n\nexport function PublishedStatus(props: {document?: PreviewValue | Partial<SanityDocument> | null}) {\n  const {document} = props\n  const updatedAt = document && '_updatedAt' in document && document._updatedAt\n\n  return (\n    <Tooltip\n      portal\n      content={\n        <Box padding={2}>\n          <Text size={1}>\n            {document ? (\n              <>Published {updatedAt && <TimeAgo time={updatedAt} />}</>\n            ) : (\n              <>Not published</>\n            )}\n          </Text>\n        </Box>\n      }\n    >\n      <TextWithTone tone=\"positive\" dimmed={!document} muted={!document} size={1}>\n        <PublishIcon />\n      </TextWithTone>\n    </Tooltip>\n  )\n}\n", "import React from 'react'\nimport {EditIcon} from '@sanity/icons'\nimport {PreviewValue, SanityDocument} from '@sanity/types'\nimport {Box, Text, Tooltip} from '@sanity/ui'\nimport {TimeAgo} from './TimeAgo'\nimport {TextWithTone} from 'sanity'\n\nexport function DraftStatus(props: {document?: PreviewValue | Partial<SanityDocument> | null}) {\n  const {document} = props\n  const updatedAt = document && '_updatedAt' in document && document._updatedAt\n\n  return (\n    <Tooltip\n      portal\n      content={\n        <Box padding={2}>\n          <Text size={1}>\n            {document ? (\n              <>Edited {updatedAt && <TimeAgo time={updatedAt} />}</>\n            ) : (\n              <>No unpublished edits</>\n            )}\n          </Text>\n        </Box>\n      }\n    >\n      <TextWithTone tone=\"caution\" dimmed={!document} muted={!document} size={1}>\n        <EditIcon />\n      </TextWithTone>\n    </Tooltip>\n  )\n}\n", "import type {SanityDocument, SchemaType} from '@sanity/types'\nimport React, {isValidElement} from 'react'\nimport {isNumber, isString} from 'lodash'\nimport {Inline} from '@sanity/ui'\nimport {useMemoObservable} from 'react-rx'\nimport {PublishedStatus} from '../PublishedStatus'\nimport {DraftStatus} from '../DraftStatus'\nimport type {PaneItemPreviewState} from './types'\nimport {\n  DocumentPresence,\n  DocumentPreviewPresence,\n  DocumentPreviewStore,\n  GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  SanityDefaultPreview,\n  isRecord,\n} from 'sanity'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: React.ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n  const title =\n    (isRecord(value.title) && isValidElement(value.title)) ||\n    isString(value.title) ||\n    isNumber(value.title)\n      ? value.title\n      : null\n\n  // NOTE: this emits sync so can never be null\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const {draft, published, isLoading} = useMemoObservable<PaneItemPreviewState>(\n    () => getPreviewStateObservable(props.documentPreviewStore, schemaType, value._id, title),\n    [props.documentPreviewStore, schemaType, value._id, title]\n  )!\n\n  const status = isLoading ? null : (\n    <Inline space={4}>\n      {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n      <PublishedStatus document={published} />\n      <DraftStatus document={draft} />\n    </Inline>\n  )\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({value, draft, published})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n    />\n  )\n}\n", "import {createContext} from 'react'\nimport {PaneRouterContextValue} from './types'\n\nfunction missingContext<T = unknown>(): T {\n  throw new Error('Pane is missing router context')\n}\n\n/**\n * @beta\n */\nexport const PaneRouterContext = createContext<PaneRouterContextValue>({\n  index: 0,\n  groupIndex: 0,\n  siblingIndex: 0,\n  payload: undefined,\n  params: {},\n  hasGroupSiblings: false,\n  groupLength: 0,\n  routerPanesState: [],\n  BackLink: () => missingContext(),\n  ChildLink: () => missingContext(),\n  ReferenceChildLink: () => missingContext(),\n  handleEditReference: () => missingContext(),\n  ParameterizedLink: () => missingContext(),\n  replaceCurrent: () => missingContext(),\n  closeCurrent: () => missingContext(),\n  duplicateCurrent: () => missingContext(),\n  setView: () => missingContext(),\n  setParams: () => missingContext(),\n  setPayload: () => missingContext(),\n  navigateIntent: () => missingContext(),\n})\n", "import React, {forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {BackLinkProps} from './types'\nimport {StateLink} from 'sanity/router'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as React.ComponentType<BackLinkProps>\n", "import React, {forwardRef, useContext} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {ChildLinkProps} from './types'\nimport {StateLink} from 'sanity/router'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n", "import React, {forwardRef} from 'react'\nimport {toString as pathToString} from '@sanity/util/paths'\nimport {ChildLink} from './ChildLink'\nimport {ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n", "import React, {forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {useUnique} from 'sanity'\nimport {StateLink} from 'sanity/router'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: React.ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n", "import {useContext} from 'react'\nimport {PaneRouterContext} from './PaneRouterContext'\nimport {PaneRouterContextValue} from './types'\n\n/**\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n", "import React, {useCallback} from 'react'\nimport type {SanityDocument, SchemaType} from '@sanity/types'\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\nimport {\n  FIXME,\n  PreviewCard,\n  getPublishedId,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: React.ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id]\n  )\n\n  return (\n    <PreviewCard\n      __unstable_focusRing\n      as={Link as FIXME}\n      data-as=\"a\"\n      onClick={onClick}\n      padding={2}\n      radius={2}\n    >\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"default\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n", "import React from 'react'\nimport styled from 'styled-components'\nimport {rem, Flex, Text, Card, Box, Tooltip, Container, Inline} from '@sanity/ui'\nimport {InfoOutlineIcon} from '@sanity/icons'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const TableContainer = styled(Box).attrs({paddingX: 2, paddingBottom: 2})`\n  overflow: auto;\n  max-height: 150px;\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  thead > tr {\n    position: sticky;\n    top: 0;\n    background: var(--card-bg-color);\n    z-index: 1;\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 35px;\n`\n\nexport const ReferencesCard = styled(Card).attrs({\n  radius: 2,\n  shadow: 1,\n  marginBottom: 4,\n  flex: 'auto',\n})`\n  overflow: hidden;\n  min-height: 150px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Inline space={2}>\n      <Text size={1} muted>\n        {difference} other reference{difference === 1 ? '' : 's'} not shown{' '}\n      </Text>\n\n      <Tooltip\n        portal\n        placement=\"top\"\n        content={\n          <Container width={0}>\n            <Box padding={2}>\n              <Text size={1}>\n                We can't show metadata about these references because no token with access to the\n                datasets they are in was found.\n              </Text>\n            </Box>\n          </Container>\n        }\n      >\n        <Text size={1} muted>\n          <InfoOutlineIcon />\n        </Text>\n      </Tooltip>\n    </Inline>\n  )\n}\n", "import React, {useCallback} from 'react'\nimport {\n  WarningOutlineIcon,\n  DocumentsIcon,\n  ClipboardIcon,\n  UnknownIcon,\n  ChevronDownIcon,\n} from '@sanity/icons'\nimport {useToast, Text, Box, Button, Flex, Label, Card, Stack} from '@sanity/ui'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {ReferringDocuments} from './useReferringDocuments'\nimport {\n  ReferencesCard,\n  OtherReferenceCount,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  TableContainer,\n  Table,\n  ChevronWrapper,\n  DocumentIdFlex,\n} from './ConfirmDeleteDialogBody.styles'\nimport {SanityDefaultPreview, useSchema} from 'sanity'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: string\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title=\"Preview Unavailable\"\n            subtitle={`ID: ${item._id}`}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, onReferenceLinkClick]\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\">\n        Are you sure you want to {action} <strong>“{documentTitle}”</strong>?\n      </Text>\n    )\n  }\n\n  const documentCount =\n    crossDatasetReferences.totalCount === 1\n      ? '1 document'\n      : `${crossDatasetReferences.totalCount.toLocaleString()} documents`\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n  const datasetsCount =\n    normalizedDatasetNames.length === 1\n      ? 'another dataset'\n      : `${normalizedDatasetNames.length} datasets`\n\n  let datasetNameList = `Dataset${\n    normalizedDatasetNames.length === 1 ? '' : 's'\n  }: ${normalizedDatasetNames.join(', ')}`\n\n  // We only have one dataset, and it is unavailable due to permissions\n  if (hasUnknownDatasetNames && normalizedDatasetNames.length === 1) {\n    datasetNameList = 'Unavailable dataset'\n  }\n\n  return (\n    <>\n      <Card padding={3} radius={2} tone=\"caution\" marginBottom={4} flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              {totalCount === 1 ? (\n                <>1 document refers to “{documentTitle}”</>\n              ) : (\n                <>\n                  {totalCount.toLocaleString()} documents refer to “{documentTitle}”\n                </>\n              )}\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n\n      <Box flex=\"none\" marginBottom={4}>\n        <Text>\n          You may not be able to {action} “{documentTitle}” because the following documents refer to\n          it:\n        </Text>\n      </Box>\n\n      <ReferencesCard>\n        <Flex direction=\"column\" height=\"fill\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" padding={3} space={3} overflow=\"auto\" data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box as=\"li\" key={item._id}>\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Flex padding={4} align=\"center\">\n                  <Box marginRight={4}>\n                    <Text size={3}>\n                      <DocumentsIcon />\n                    </Text>\n                  </Box>\n                  <Flex marginRight={4} direction=\"column\">\n                    <Box marginBottom={2}>\n                      <Text>\n                        {documentCount} in {datasetsCount}\n                      </Text>\n                    </Box>\n                    <Box>\n                      <Text title={datasetNameList} textOverflow=\"ellipsis\" size={1} muted>\n                        {datasetNameList}\n                      </Text>\n                    </Box>\n                  </Flex>\n                  <ChevronWrapper>\n                    <Text muted>\n                      <ChevronDownIcon />\n                    </Text>\n                  </ChevronWrapper>\n                </Flex>\n              </CrossDatasetReferencesSummary>\n\n              <TableContainer>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Label muted size={0}>\n                          Project ID\n                        </Label>\n                      </th>\n                      <th>\n                        <Label muted size={0}>\n                          Dataset\n                        </Label>\n                      </th>\n                      <th>\n                        <Label muted size={0}>\n                          Document ID\n                        </Label>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        // eslint-disable-next-line react/no-array-index-key\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <CopyToClipboard\n                                  text={documentId}\n                                  // eslint-disable-next-line react/jsx-no-bind\n                                  onCopy={() => {\n                                    // TODO: this isn't visible with the dialog open\n                                    toast.push({\n                                      title: 'Copied document ID to clipboard!',\n                                      status: 'success',\n                                    })\n                                  }}\n                                >\n                                  <Button\n                                    title=\"Copy ID to clipboard\"\n                                    mode=\"bleed\"\n                                    icon={ClipboardIcon}\n                                    fontSize={0}\n                                  />\n                                </CopyToClipboard>\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n                <Box padding={2}>\n                  <OtherReferenceCount {...crossDatasetReferences} />\n                </Box>\n              </TableContainer>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </ReferencesCard>\n\n      <Box flex=\"none\">\n        <Text>\n          If you {action} this document, documents that refer to it will no longer be able to access\n          it.\n        </Text>\n      </Box>\n    </>\n  )\n}\n", "import React, {useMemo, useId} from 'react'\nimport styled from 'styled-components'\nimport {Box, Dialog, Button, Text, Spinner, Grid, Flex} from '@sanity/ui'\nimport {DocTitle} from '../DocTitle'\nimport {useReferringDocuments} from './useReferringDocuments'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\n\n/** @internal */\nexport const DialogBody = styled(Flex).attrs({\n  padding: 4,\n  direction: 'column',\n  height: 'fill',\n})`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 300px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: string\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const capitalizedAction = `${action.substring(0, 1).toUpperCase()}${action.substring(1)}`\n\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={`${capitalizedAction} document?`}\n      footer={\n        <Grid columns={showConfirmButton ? 2 : 1} gap={2} paddingX={4} paddingY={3}>\n          <Button mode=\"ghost\" onClick={onCancel} text=\"Cancel\" />\n\n          {showConfirmButton && (\n            <Button\n              data-testid=\"confirm-delete-button\"\n              text={totalCount > 0 ? `${capitalizedAction} anyway` : `${capitalizedAction} now`}\n              tone=\"critical\"\n              onClick={onConfirm}\n            />\n          )}\n        </Grid>\n      }\n      onClose={onCancel}\n      onClickOutside={onCancel}\n      // Custom portal element configured in `DocumentPane` so that the dialog is scoped to the current pane\n      portal=\"documentPanelPortalElement\"\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <Spinner muted />\n            <Box marginTop={3}>\n              <Text align=\"center\" muted size={1}>\n                Looking for referring documents…\n              </Text>\n            </Box>\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n", "import React, {useCallback, useState, useId} from 'react'\nimport {Box, Flex, Button, Dialog, Text, ErrorBoundary} from '@sanity/ui'\nimport {ConfirmDeleteDialog, ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<React.ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header=\"Error\"\n      footer={\n        <Flex paddingX={4} paddingY={3} direction=\"column\">\n          <Button mode=\"ghost\" text=\"Retry\" onClick={handleRetry} />\n        </Flex>\n      }\n      onClose={props.onCancel}\n      // Custom portal element configured in `DocumentPane` so that the dialog is scoped to the current pane\n      portal=\"documentPanelPortalElement\"\n    >\n      <Box padding={4}>\n        <Text>An error occurred while loading referencing documents.</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n", "import {EllipsisVerticalIcon} from '@sanity/icons'\nimport {Box, Button, Label, Menu, MenuButton, MenuDivider, MenuItem, PopoverProps} from '@sanity/ui'\nimport React, {forwardRef, Fragment, useCallback, useMemo, useId} from 'react'\nimport {PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {IntentLink} from 'sanity/router'\n\ninterface PaneContextMenuButtonProps {\n  items: PaneMenuItem[]\n  itemGroups?: PaneMenuItemGroup[]\n  onAction: (action: PaneMenuItem) => void\n}\n\ninterface MenuItemGroup {\n  id: string\n  title?: React.ReactNode\n  items: PaneMenuItem[]\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n  width: 0,\n}\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {items, itemGroups, onAction} = props\n  const id = useId()\n\n  const groups = useMemo(() => {\n    if (!itemGroups || itemGroups.length === 0) {\n      return [{id: '$default', items}]\n    }\n\n    const defaultGroup: MenuItemGroup = {id: '$default', items: []}\n\n    const groupMap = itemGroups.reduce((acc: Record<string, MenuItemGroup>, group) => {\n      acc[group.id] = {id: group.id, title: group.title, items: []}\n      return acc\n    }, {})\n\n    for (const item of items) {\n      const group = groupMap[item.group || '$default'] || defaultGroup\n\n      group.items.push(item)\n    }\n\n    return Object.values(groupMap)\n      .concat([defaultGroup])\n      .filter((g) => g.items.length > 0)\n  }, [items, itemGroups])\n\n  return (\n    <MenuButton\n      button={<Button icon={EllipsisVerticalIcon} mode=\"bleed\" padding={3} title=\"Show menu\" />}\n      id={id}\n      menu={\n        <Menu>\n          {groups.map((group, groupIndex) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <Fragment key={groupIndex}>\n              {groupIndex > 0 && <MenuDivider />}\n              {group.title && (\n                <Box paddingX={3} paddingTop={3} paddingBottom={2}>\n                  <Label muted>{group.title}</Label>\n                </Box>\n              )}\n              {group.items.map((item, itemIndex) => (\n                <PaneContextMenuItem\n                  item={item}\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={`${itemIndex}-${item.title}`}\n                  onAction={onAction}\n                />\n              ))}\n            </Fragment>\n          ))}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n\nfunction PaneContextMenuItem(props: {\n  item: PaneMenuItem\n  onAction: (action: PaneMenuItem) => void\n}) {\n  const {item, onAction} = props\n\n  const handleClick = useCallback(() => {\n    onAction(item)\n  }, [item, onAction])\n\n  const hotkeys = useMemo(() => {\n    if (!item.shortcut) return undefined\n\n    return item.shortcut.split('+')\n  }, [item])\n\n  const IntentButtonOrActionButton = forwardRef((linkProps, linkRef: React.ForwardedRef<never>) =>\n    item.intent ? (\n      <IntentLink\n        {...linkProps}\n        intent={item.intent.type}\n        params={item.intent.params}\n        ref={linkRef}\n      />\n    ) : (\n      <MenuItem {...linkProps} pressed={item.selected} />\n    )\n  )\n\n  IntentButtonOrActionButton.displayName = 'Link'\n\n  return (\n    <MenuItem\n      as={IntentButtonOrActionButton}\n      data-as={item.intent ? 'a' : 'button'}\n      hotkeys={hotkeys}\n      icon={item.icon}\n      onClick={handleClick}\n      padding={0}\n      text={item.title}\n    />\n  )\n}\n", "/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n", "import {createContext} from 'react'\nimport {PaneContextValue} from './types'\n\n/**\n * @internal\n */\nexport const PaneContext = createContext<PaneContextValue | null>(null)\n", "import {createContext} from 'react'\nimport {PaneLayoutContextValue} from './types'\n\n/**\n * @internal\n */\nexport const PaneLayoutContext = createContext<PaneLayoutContextValue | null>(null)\n", "import {useContext} from 'react'\nimport {PaneLayoutContext} from './PaneLayoutContext'\nimport {PaneLayoutContextValue} from './types'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n", "import {Layer} from '@sanity/ui'\nimport React, {useCallback, useState} from 'react'\nimport styled from 'styled-components'\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize]\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n", "import {BoundaryElementProvider, Card, CardProps, Code, Flex, useForwardedRef} from '@sanity/ui'\nimport React, {forwardRef, useMemo, useState, useCallback, useEffect} from 'react'\nimport styled from 'styled-components'\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneContext} from './PaneContext'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\nimport {LegacyLayerProvider} from 'sanity'\n\ninterface PaneProps {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\n// eslint-disable-next-line complexity\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const forwardedRef = useForwardedRef(ref)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  const setRef = useCallback(\n    (refValue: HTMLDivElement | null) => {\n      setRootElement(refValue)\n      forwardedRef.current = refValue\n    },\n    [forwardedRef]\n  )\n\n  useEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement]\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement]\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth]\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <Root\n            data-testid=\"pane\"\n            tone=\"inherit\"\n            hidden={hidden}\n            id={id}\n            overflow={layoutCollapsed ? undefined : 'hidden'}\n            {...restProps}\n            data-pane-collapsed={collapsed ? '' : undefined}\n            data-pane-index={paneIndex}\n            data-pane-selected={selected ? '' : undefined}\n            ref={setRef}\n            style={style}\n          >\n            {PANE_DEBUG && (\n              <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                <Code size={1}>\n                  {[\n                    `#${paneIndex}`,\n                    `collapsed=${collapsed}`,\n                    `currentMinWidth=${currentMinWidth}`,\n                    `currentMaxWidth=${currentMaxWidth}`,\n                    `flex=${flex}`,\n                    `minWidth=${minWidth}`,\n                    `maxWidth=${maxWidth}`,\n                  ].join('\\n')}\n                </Code>\n              </Card>\n            )}\n\n            <BoundaryElementProvider element={rootElement}>\n              {!hidden && (\n                <Flex direction=\"column\" height=\"fill\">\n                  {children}\n                </Flex>\n              )}\n            </BoundaryElementProvider>\n          </Root>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n", "import {useContext} from 'react'\nimport {PaneContext} from './PaneContext'\nimport {PaneContextValue} from './types'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n", "import {Card} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n", "import {BoxOverflow} from '@sanity/ui'\nimport React, {forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\nimport {Root} from './PaneContent.styles'\n\ninterface PaneContentProps {\n  as?: React.ElementType | keyof JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n", "import {Card, Layer} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: -1px;\n    border-bottom: 1px solid var(--card-shadow-outline-color);\n  }\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n", "import {Box} from '@sanity/ui'\nimport React, {forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {LegacyLayerProvider} from 'sanity'\n\ninterface PaneFooterProps {\n  children?: React.ReactNode\n  padding?: number | number[]\n}\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n", "import {Box, Flex, Layer, rgba, TextSkeleton, Text, Theme} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const Root = styled(Layer)`\n  line-height: 0;\n  position: sticky;\n  top: 0;\n\n  &:not([data-collapsed]):after {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -1px;\n    border-bottom: 1px solid var(--card-shadow-outline-color);\n  }\n`\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleBox = styled(Box)``\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n\nconst TABS_SCROLL_PADDING = 100\n\nexport const TabsBox = styled(Box)(({theme}: {theme: Theme}) => {\n  const {color, space} = theme.sanity\n\n  return css`\n    margin: -${space[2]}px 0 -${space[2]}px -${space[3]}px;\n    overflow: hidden;\n    position: relative;\n\n    & > div {\n      white-space: nowrap;\n      padding: ${space[2]}px 0 calc(${TABS_SCROLL_PADDING}px + ${space[2]}px) ${space[3]}px;\n      margin-bottom: ${0 - TABS_SCROLL_PADDING}px;\n      overflow: auto;\n\n      /* right padding */\n      & > div:after {\n        content: '';\n        display: inline-block;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        width: ${space[3]}px;\n        height: 1px;\n      }\n    }\n\n    /* Gradient that makes it look like tabs disappear into nothing (looks nicer) */\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      background: linear-gradient(to right, ${rgba(color.base.bg, 0)}, var(--card-bg-color));\n      width: ${space[3]}px;\n      pointer-events: none;\n    }\n  `\n})\n", "import {useElementRect, Box, Card, Flex, LayerProvider} from '@sanity/ui'\nimport React, {useMemo, useCallback, forwardRef} from 'react'\nimport {usePane} from './usePane'\nimport {Layout, Root, TabsBox, TitleBox, TitleTextSkeleton, TitleText} from './PaneHeader.styles'\nimport {LegacyLayerProvider} from 'sanity'\n\ninterface PaneHeaderProps {\n  actions?: React.ReactNode\n  backButton?: React.ReactNode\n  loading?: boolean\n  subActions?: React.ReactNode\n  tabs?: React.ReactNode\n  title: React.ReactNode\n}\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: React.ForwardedRef<HTMLDivElement>\n) {\n  const {actions, backButton, loading, subActions, tabs, title} = props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect]\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root data-collapsed={collapsed ? '' : undefined} data-testid=\"pane-header\" ref={ref}>\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout\n              onClick={handleLayoutClick}\n              padding={2}\n              paddingBottom={tabs || subActions ? 0 : 2}\n              sizing=\"border\"\n              style={layoutStyle}\n            >\n              {backButton}\n\n              <TitleBox\n                flex={1}\n                onClick={handleTitleClick}\n                paddingY={3}\n                paddingLeft={backButton ? 1 : 3}\n              >\n                {loading && <TitleTextSkeleton animated radius={1} />}\n                {!loading && (\n                  <TitleText tabIndex={0} textOverflow=\"ellipsis\" weight=\"semibold\">\n                    {title}\n                  </TitleText>\n                )}\n              </TitleBox>\n\n              {actions && (\n                <Box hidden={collapsed} paddingLeft={1}>\n                  <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                </Box>\n              )}\n            </Layout>\n\n            {(tabs || subActions) && (\n              <Flex\n                align=\"center\"\n                hidden={collapsed}\n                paddingTop={1}\n                paddingRight={2}\n                paddingBottom={2}\n                paddingLeft={3}\n                overflow=\"auto\"\n              >\n                <TabsBox flex={1} marginRight={subActions ? 3 : 0}>\n                  <div>{tabs}</div>\n                </TabsBox>\n\n                {subActions && <Box>{subActions}</Box>}\n              </Flex>\n            )}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n", "import {Card} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n", "import {Button} from '@sanity/ui'\nimport React, {forwardRef, useMemo} from 'react'\nimport {PaneMenuItem} from '../types'\nimport {IntentLink} from 'sanity/router'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {intent: RouterIntent} & Omit<React.ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: React.ForwardedRef<HTMLAnchorElement>\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: React.ReactNode},\n        linkRef: React.ForwardedRef<HTMLAnchorElement>\n      ) {\n        return (\n          <IntentLink {...linkProps} intent={intent.type} params={intent.params} ref={linkRef} />\n        )\n      }),\n    [intent]\n  )\n\n  return props.disabled ? (\n    <Button {...props} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button\n      {...restProps}\n      as={Link}\n      data-as=\"a\"\n      ref={ref as React.ForwardedRef<HTMLButtonElement>}\n    />\n  )\n})\n", "import {Tooltip, Text, Box} from '@sanity/ui'\nimport React from 'react'\nimport {useCurrentUser, InsufficientPermissionsMessage} from 'sanity'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  loading: boolean\n  children: React.ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          <Box padding={2}>\n            <Text>Loading…</Text>\n          </Box>\n        ) : (\n          <InsufficientPermissionsMessage currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n", "import {ComposeIcon} from '@sanity/icons'\nimport React, {useMemo, forwardRef} from 'react'\nimport {Box, Button, Label, Menu, MenuButton, MenuItem, PopoverProps} from '@sanity/ui'\nimport {Schema} from '@sanity/types'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\nimport {IntentLink} from 'sanity/router'\nimport {\n  useTemplatePermissions,\n  TemplatePermissionsResult,\n  Template,\n  InitialValueTemplateItem,\n  useSchema,\n  useTemplates,\n} from 'sanity'\n\nexport type PaneHeaderIntentProps = React.ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  schema: Schema,\n  templates: Template[],\n  item: InitialValueTemplateItem\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const schema = useSchema()\n  const templates = useTemplates()\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {}\n    )\n  }, [templatePermissions])\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip reveal loading={isTemplatePermissionsLoading}>\n        <Button\n          aria-label=\"Insufficient permissions\"\n          icon={ComposeIcon}\n          mode=\"bleed\"\n          disabled\n          data-testid=\"action-intent-button\"\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted\n    const intent = getIntent(schema, templates, firstItem)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n      >\n        <IntentButton\n          aria-label={firstItem.title}\n          icon={firstItem.icon || ComposeIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          icon={ComposeIcon}\n          mode=\"bleed\"\n          padding={3}\n          data-testid=\"multi-action-intent-button\"\n        />\n      }\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          <Box paddingX={3} paddingTop={3} paddingBottom={2}>\n            <Label muted>Create</Label>\n          </Box>\n\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(schema, templates, item)\n            const template = templates.find((t) => t.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: React.ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  ref={linkRef}\n                />\n              )\n            )\n\n            Link.displayName = 'Link'\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                key={item.id}\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={item.title || template.title}\n                  aria-label={disabled ? 'Insufficient permissions' : item.title || template.title}\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n", "import {UnknownIcon} from '@sanity/icons'\nimport {Box, Button, Inline, Text, Tooltip} from '@sanity/ui'\nimport {partition, uniqBy} from 'lodash'\nimport React, {memo, useCallback, useMemo} from 'react'\nimport {DeskToolPaneActionHandler, PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {IntentButton} from '../IntentButton'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\nimport {useTemplates, InitialValueTemplateItem} from 'sanity'\n\n// to preserve memory references\nconst emptyArray: never[] = []\nconst emptyObject = {}\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, DeskToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(\n  ({\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = emptyArray,\n    menuItems = emptyArray,\n    menuItemGroups = emptyArray,\n    actionHandlers = emptyObject,\n  }: PaneHeaderActionsProps) => {\n    const templates = useTemplates()\n\n    const handleAction = useCallback(\n      (item: PaneMenuItem) => {\n        if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n          console.warn('No handler for action:', item.action)\n          return false\n        }\n\n        const handler =\n          // eslint-disable-next-line no-nested-ternary\n          typeof item.action === 'function'\n            ? item.action\n            : typeof item.action === 'string'\n            ? actionHandlers[item.action]\n            : null\n\n        if (handler) {\n          handler(item.params as Record<string, string>)\n          return true\n        }\n\n        return false\n      },\n      [actionHandlers]\n    )\n\n    const [actionMenuItems, contextMenuItems] = useMemo(() => {\n      const nonCreateMenuItem = menuItems\n        // remove items with `create` intents because those will get combined\n        // into one action button later\n        .filter((item) => item.intent?.type !== 'create')\n\n      return partition(nonCreateMenuItem, (item) => item.showAsAction)\n    }, [menuItems])\n\n    const initialValueTemplateItemFromMenuItems = useMemo(() => {\n      return menuItems\n        .map((item, menuItemIndex) => {\n          if (item.intent?.type !== 'create') return null\n\n          const {params} = item.intent\n          if (!params) return null\n\n          const intentParams = Array.isArray(params) ? params[0] : params\n          const templateParams = Array.isArray(params) ? params[1] : undefined\n\n          // fallback to the schema type name as the template ID.\n          // by default, the initial template values are populated from every\n          // document type in the schema\n          const templateId = intentParams.template || intentParams.type\n          if (!templateId) return null\n\n          // eslint-disable-next-line max-nested-callbacks\n          const template = templates.find((t) => t.id === templateId)\n          // the template doesn't exist then the action might be disabled\n          if (!template) return null\n\n          const initialDocumentId = intentParams.id\n\n          return {\n            item,\n            template,\n            templateParams,\n            menuItemIndex,\n            initialDocumentId,\n          }\n        })\n        .filter(isNonNullable)\n        .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n          const initialValueTemplateItem: InitialValueTemplateItem = {\n            id: `menuItem${menuItemIndex}`,\n            initialDocumentId,\n            templateId: template.id,\n            type: 'initialValueTemplateItem',\n            title: item.title || template.title,\n            icon: item.icon as InitialValueTemplateItem['icon'],\n            description: template.description,\n            parameters: templateParams,\n            schemaType: template.schemaType,\n          }\n\n          return initialValueTemplateItem\n        })\n    }, [menuItems, templates])\n\n    const combinedInitialValueTemplates = useMemo(() => {\n      // this de-dupes create actions\n      return uniqBy(\n        [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n        (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters])\n      )\n    }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n    return (\n      <Inline space={1}>\n        {[\n          Boolean(combinedInitialValueTemplates.length) && (\n            <PaneHeaderCreateButton\n              key=\"$CreateMenuButton\"\n              templateItems={combinedInitialValueTemplates}\n            />\n          ),\n          //\n          ...actionMenuItems.map((actionItem, actionIndex) => {\n            return (\n              <Tooltip\n                content={\n                  <Box padding={2}>\n                    <Text size={1}>{actionItem.title}</Text>\n                  </Box>\n                }\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${actionIndex}-${actionItem.title}`}\n                placement=\"bottom\"\n              >\n                {actionItem.intent ? (\n                  <IntentButton\n                    intent={actionItem.intent}\n                    aria-label={actionItem.title}\n                    icon={actionItem.icon || UnknownIcon}\n                    mode=\"bleed\"\n                  />\n                ) : (\n                  <Button\n                    aria-label={actionItem.title}\n                    icon={actionItem.icon || UnknownIcon}\n                    mode=\"bleed\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => handleAction(actionItem)}\n                  />\n                )}\n              </Tooltip>\n            )\n          }),\n          //\n          Boolean(contextMenuItems.length) && (\n            <PaneContextMenuButton\n              items={contextMenuItems}\n              itemGroups={menuItemGroups}\n              key=\"$ContextMenu\"\n              onAction={handleAction}\n            />\n          ),\n        ]}\n      </Inline>\n    )\n  }\n)\n\nPaneHeaderActions.displayName = 'PaneHeaderActions'\n", "/* eslint-disable import/no-extraneous-dependencies */\n\nimport {TrashIcon} from '@sanity/icons'\nimport React, {useCallback, useState} from 'react'\nimport {ConfirmDeleteDialog} from '../components'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOTHING_TO_DELETE: 'This document doesn’t yet exist or is already deleted',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete}) => {\n  const {delete: deleteOp} = useDocumentOperation(id, type)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: true,\n      label: 'Delete',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"delete this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: TrashIcon,\n    disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n    title:\n      (deleteOp.disabled &&\n        DISABLED_REASON_TITLE[deleteOp.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    label: isDeleting ? 'Deleting…' : 'Delete',\n    shortcut: 'Ctrl+Alt+D',\n    onHandle: handle,\n    dialog: isConfirmDialogOpen && {\n      type: 'dialog',\n      onClose: onComplete,\n      content: (\n        <ConfirmDeleteDialog\n          action=\"delete\"\n          id={draft?._id || id}\n          type={type}\n          onCancel={handleCancel}\n          onConfirm={handleConfirm}\n        />\n      ),\n    },\n  }\n}\n\nDeleteAction.action = 'delete'\n", "/* eslint-disable import/no-extraneous-dependencies */\n\nimport {ResetIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {\n  DocumentActionComponent,\n  DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NO_CHANGES: 'This document has no unpublished changes',\n  NOT_PUBLISHED: 'This document is not published',\n}\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: <>Are you sure you want to discard all changes since last published?</>,\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete]\n  )\n\n  if (!published || liveEdit) {\n    return null\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: true,\n      label: 'Discard changes',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"discard changes in this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: ResetIcon,\n    disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n    title:\n      (discardChanges.disabled &&\n        DISABLED_REASON_TITLE[discardChanges.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    label: 'Discard changes',\n    onHandle: handle,\n    dialog,\n  }\n}\n\nDiscardChangesAction.action = 'discardChanges'\n", "import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport React, {useCallback, useState} from 'react'\nimport {useRouter} from 'sanity/router'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useDocumentPairPermissions,\n  useDocumentOperation,\n  useCurrentUser,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOTHING_TO_DUPLICATE: 'This document doesn’t yet exist so there‘s nothing to duplicate',\n}\n\n/** @internal */\nexport const DuplicateAction: DocumentActionComponent = ({id, type, onComplete}) => {\n  const {duplicate} = useDocumentOperation(id, type)\n  const {navigateIntent} = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'duplicate',\n  })\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(() => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n    duplicate.execute(dupeId)\n    navigateIntent('edit', {id: dupeId, type})\n    onComplete()\n  }, [duplicate, navigateIntent, onComplete, type])\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      icon: CopyIcon,\n      disabled: true,\n      label: 'Duplicate',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"duplicate this document\"\n          currentUser={currentUser}\n        />\n      ),\n    }\n  }\n\n  return {\n    icon: CopyIcon,\n    disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n    label: isDuplicating ? 'Duplicating…' : 'Duplicate',\n    title:\n      (duplicate.disabled &&\n        DISABLED_REASON_TITLE[duplicate.disabled as keyof typeof DISABLED_REASON_TITLE]) ||\n      '',\n    onHandle: handle,\n  }\n}\n\nDuplicateAction.action = 'duplicate'\n", "import {RestoreIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {DocumentActionComponent, DocumentActionDialogProps, useDocumentOperation} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({id, type, revision, onComplete}) => {\n  const {restore} = useDocumentOperation(id, type)\n  const {navigateIntent} = useRouter()\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision!)\n    navigateIntent('edit', {id, type})\n    onComplete()\n  }, [restore, revision, navigateIntent, id, type, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: <>Are you sure you want to restore this document?</>,\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete])\n\n  const isRevisionInitialVersion = revision === '@initial'\n  const isRevisionLatestVersion = revision === undefined // undefined means latest version\n\n  if (isRevisionLatestVersion) {\n    return null\n  }\n\n  return {\n    label: 'Restore',\n    color: 'primary',\n    onHandle: handle,\n    title: isRevisionInitialVersion\n      ? \"You can't restore to the initial version\"\n      : 'Restore to this version',\n    icon: RestoreIcon,\n    dialog,\n    disabled: isRevisionInitialVersion,\n  }\n}\n\nHistoryRestoreAction.action = 'restore'\n", "import {\n  ValidationMarker,\n  Path,\n  SanityDocument,\n  ObjectSchemaType,\n  SanityDocumentLike,\n} from '@sanity/types'\nimport {createContext} from 'react'\nimport {View} from '../../structureBuilder'\nimport {PaneMenuItem, PaneMenuItemGroup} from '../../types'\nimport {TimelineMode} from './types'\nimport {\n  DocumentActionComponent,\n  DocumentBadgeComponent,\n  DocumentFormNode,\n  DocumentLanguageFilterComponent,\n  DocumentPermission,\n  EditStateFor,\n  PatchEvent,\n  PermissionCheckResult,\n  StateTree,\n  Timeline,\n  TimelineController,\n} from 'sanity'\n\n/** @internal */\nexport interface DocumentPaneContextValue {\n  actions: DocumentActionComponent[] | null\n  activeViewId: string | null\n  badges: DocumentBadgeComponent[] | null\n  changesOpen: boolean\n  collapsedFieldSets: StateTree<boolean> | undefined\n  collapsedPaths: StateTree<boolean> | undefined\n  compareValue: Partial<SanityDocument> | null\n  connectionState: 'connecting' | 'reconnecting' | 'connected'\n  displayed: Partial<SanityDocument> | null\n  documentId: string\n  documentIdRaw: string\n  documentType: string\n  editState: EditStateFor | null\n  focusPath: Path\n  // TODO: rename this for consistency\n  historyController: TimelineController\n  index: number\n  inspectOpen: boolean\n  menuItemGroups: PaneMenuItemGroup[]\n  menuItems: PaneMenuItem[]\n  onBlur: (blurredPath: Path) => void\n  onChange: (event: PatchEvent) => void\n  onFocus: (pathOrEvent: Path) => void\n  onHistoryClose: () => void\n  onHistoryOpen: () => void\n  onInspectClose: () => void\n  onKeyUp: (event: React.KeyboardEvent<HTMLDivElement>) => void\n  onMenuAction: (item: PaneMenuItem) => void\n  onPaneClose: () => void\n  onPaneSplit?: () => void\n  onPathOpen: (path: Path) => void\n  onSetActiveFieldGroup: (path: Path, groupName: string) => void\n  onSetCollapsedPath: (path: Path, expanded: boolean) => void\n  onSetCollapsedFieldSet: (path: Path, expanded: boolean) => void\n  paneKey: string\n  previewUrl?: string | null\n  ready: boolean\n  schemaType: ObjectSchemaType\n  setTimelineMode: (mode: TimelineMode) => void\n  setTimelineRange(since: string | null, rev: string | null): void\n  source?: string\n  timeline: Timeline\n  timelineMode: TimelineMode\n  title: string | null\n  validation: ValidationMarker[]\n  value: SanityDocumentLike\n  views: View[]\n  formState: DocumentFormNode | null\n  permissions?: PermissionCheckResult | null\n  isPermissionsLoading: boolean\n  unstable_languageFilter: DocumentLanguageFilterComponent[]\n}\n\n/** @internal */\nexport const DocumentPaneContext = createContext<DocumentPaneContextValue | null>(null)\n", "import {useContext} from 'react'\nimport {DocumentPaneContext, DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n", "import {CheckmarkIcon, PublishIcon} from '@sanity/icons'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport React, {useCallback, useEffect, useState} from 'react'\nimport {TimeAgo} from '../components'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useSyncState,\n  useValidationStatus,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  LIVE_EDIT_ENABLED: 'Cannot publish since liveEdit is enabled for this document type',\n  ALREADY_PUBLISHED: 'Already published',\n  NO_CHANGES: 'No unpublished changes',\n  NOT_READY: 'Operation not ready',\n}\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE,\n  publishedAt: string | undefined\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return (\n      <>\n        <span>\n          Published <TimeAgo time={publishedAt} />\n        </span>\n      </>\n    )\n  }\n  return DISABLED_REASON_TITLE[reason]\n}\n\n/** @internal */\n// eslint-disable-next-line complexity\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published} = props\n  const [publishState, setPublishState] = useState<'publishing' | 'published' | null>(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, onHistoryOpen, documentId, documentType} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  // eslint-disable-next-line no-nested-ternary\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt) || ''\n    : hasValidationErrors\n    ? 'There are validation errors that need to be fixed before this document can be published'\n    : ''\n\n  const hasDraft = Boolean(draft)\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState('publishing')\n  }, [publish])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish = publishState === 'publishing' && !hasDraft\n    if (didPublish) {\n      if (changesOpen) {\n        // Re-open the panel\n        onHistoryOpen()\n      }\n    }\n    const nextState = didPublish ? 'published' : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, hasDraft, onHistoryOpen])\n\n  const handle = useCallback(() => {\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  if (liveEdit) {\n    return {\n      tone: 'positive',\n      label: 'Publish',\n      title:\n        'Live Edit is enabled for this content type and publishing happens automatically as you make changes',\n      disabled: true,\n    }\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'positive',\n      label: 'Publish',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"publish this document\"\n          currentUser={currentUser}\n        />\n      ),\n      disabled: true,\n    }\n  }\n\n  const disabled = Boolean(\n    publishScheduled ||\n      editState?.transactionSyncLock?.enabled ||\n      publishState === 'publishing' ||\n      publishState === 'published' ||\n      hasValidationErrors ||\n      publish.disabled\n  )\n\n  return {\n    disabled: disabled || isPermissionsLoading,\n    tone: 'positive',\n    label:\n      // eslint-disable-next-line no-nested-ternary\n      publishState === 'published'\n        ? 'Published'\n        : publishScheduled || publishState === 'publishing'\n        ? 'Publishing…'\n        : 'Publish',\n    // @todo: Implement loading state, to show a `<Button loading />` state\n    // loading: publishScheduled || publishState === 'publishing',\n    icon: publishState === 'published' ? CheckmarkIcon : PublishIcon,\n    // eslint-disable-next-line no-nested-ternary\n    title: publishScheduled\n      ? 'Waiting for tasks to finish before publishing'\n      : publishState === 'published' || publishState === 'publishing'\n      ? null\n      : title,\n    shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n    onHandle: handle,\n  }\n}\n\nPublishAction.action = 'publish'\n", "import {UnpublishIcon} from '@sanity/icons'\nimport React, {useCallback, useMemo, useState} from 'react'\nimport {ConfirmDeleteDialog} from '../components'\nimport {\n  DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useDocumentPairPermissions,\n  useCurrentUser,\n  useDocumentOperation,\n  DocumentActionModalDialogProps,\n} from 'sanity'\n\nconst DISABLED_REASON_TITLE = {\n  NOT_PUBLISHED: 'This document is not published',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  if (liveEdit) {\n    return null\n  }\n\n  if (!isPermissionsLoading && !permissions?.granted) {\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      label: 'Unpublish',\n      title: (\n        <InsufficientPermissionsMessage\n          operationLabel=\"unpublish this document\"\n          currentUser={currentUser}\n        />\n      ),\n      disabled: true,\n    }\n  }\n\n  return {\n    tone: 'critical',\n    icon: UnpublishIcon,\n    disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n    label: 'Unpublish',\n    title: unpublish.disabled\n      ? DISABLED_REASON_TITLE[unpublish.disabled as keyof typeof DISABLED_REASON_TITLE]\n      : '',\n    onHandle: () => setConfirmDialogOpen(true),\n    dialog,\n  }\n}\n\nUnpublishAction.action = 'unpublish'\n", "import {DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEdit} = props\n\n  if (liveEdit) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\n", "/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = {}\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n", "import {uuid} from '@sanity/uuid'\nimport {PaneNode, RouterPanes} from './types'\nimport {EMPTY_PARAMS, LOADING_PANE} from './constants'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n  const isTemplate = intent === 'create' && params.template\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = isTemplate ? {template: params.template} : EMPTY_PARAMS\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n", "import {omit} from 'lodash'\nimport {RouterPanes, RouterPaneGroup, RouterPaneSibling} from './types'\nimport {route} from 'sanity/router'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayload = (str: string) =>\n  /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n  ? never\n  : T extends 0\n  ? never\n  : T extends 0n\n  ? never\n  : T extends null | undefined\n  ? NonNullable<T>\n  : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  return chunks.reduce(\n    (pane, chunk) => {\n      if (isParam(chunk)) {\n        const key = chunk.slice(0, chunk.indexOf('='))\n        const value = chunk.slice(key.length + 1)\n        pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n      } else if (isPayload(chunk)) {\n        pane.payload = tryParseBase64Payload(chunk)\n      } else {\n        // eslint-disable-next-line no-console\n        console.warn('Unknown pane segment: %s - skipping', chunk)\n      }\n\n      return pane\n    },\n    {...initial, params: EMPTY_PARAMS, payload: undefined}\n  )\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload = typeof payload === 'undefined' ? undefined : btoa(JSON.stringify(payload))\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string) {\n  return data ? tryParsePayload(atob(data)) : undefined\n}\n", "import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {definePlugin} from 'sanity'\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {router} from './router'\nimport {DeskToolOptions} from './types'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\n/** @beta */\nexport const deskTool = definePlugin<DeskToolOptions | void>((options) => ({\n  name: '@sanity/desk-tool',\n  document: {\n    actions: (prevActions) => {\n      // NOTE: since it's possible to have several desk tools in one Studio,\n      // we need to check whether the document actions already exist in the Studio config\n      const actions = prevActions.slice(0)\n      for (const action of documentActions) {\n        if (!actions.includes(action)) actions.push(action)\n      }\n      return actions\n    },\n    badges: (prevBadges) => {\n      // NOTE: since it's possible to have several desk tools in one Studio,\n      // we need to check whether the document badges already exist in the Studio config\n      const badges = prevBadges.slice(0)\n      for (const badge of documentBadges) {\n        if (!badges.includes(badge)) badges.push(badge)\n      }\n      return badges\n    },\n  },\n  tools: [\n    {\n      name: options?.name || 'desk',\n      title: options?.title || 'Desk',\n      icon: options?.icon || MasterDetailIcon,\n      component: lazy(() => import('./components/deskTool')),\n      canHandleIntent: (intent, params) => {\n        return Boolean(\n          (intent === 'edit' && params.id) ||\n            (intent === 'create' && params.type) ||\n            (intent === 'create' && params.template)\n        )\n      },\n      getIntentState,\n      options,\n      router,\n    },\n  ],\n}))\n", "import {createContext} from 'react'\nimport {DeskToolContextValue} from './types'\n\nexport const DeskToolContext = createContext<DeskToolContextValue | null>(null)\n", "import {SerializePath} from './StructureNodes'\n\n/** @internal */\nexport class SerializeError extends Error {\n  public readonly path: SerializePath\n  public helpId?: HELP_URL\n\n  constructor(\n    message: string,\n    parentPath: SerializePath,\n    pathSegment: string | number | undefined,\n    hint?: string\n  ) {\n    super(message)\n    const segment = typeof pathSegment === 'undefined' ? '<unknown>' : `${pathSegment}`\n    this.path = (parentPath || []).concat(hint ? `${segment} (${hint})` : segment)\n  }\n\n  withHelpUrl(id: HELP_URL): SerializeError {\n    this.helpId = id\n    return this\n  }\n}\n\n/** @internal */\nexport enum HELP_URL {\n  ID_REQUIRED = 'structure-node-id-required',\n  TITLE_REQUIRED = 'structure-title-required',\n  FILTER_REQUIRED = 'structure-filter-required',\n  INVALID_LIST_ITEM = 'structure-invalid-list-item',\n  COMPONENT_REQUIRED = 'structure-view-component-required',\n  DOCUMENT_ID_REQUIRED = 'structure-document-id-required',\n  DOCUMENT_TYPE_REQUIRED = 'structure-document-type-required',\n  SCHEMA_TYPE_REQUIRED = 'structure-schema-type-required',\n  SCHEMA_TYPE_NOT_FOUND = 'structure-schema-type-not-found',\n  LIST_ITEMS_MUST_BE_ARRAY = 'structure-list-items-must-be-array',\n  QUERY_PROVIDED_FOR_FILTER = 'structure-query-provided-for-filter',\n  ACTION_OR_INTENT_REQUIRED = 'structure-action-or-intent-required',\n  LIST_ITEM_IDS_MUST_BE_UNIQUE = 'structure-list-item-ids-must-be-unique',\n  ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE = 'structure-action-and-intent-mutually-exclusive',\n}\n", "import {SchemaType, SortOrderingItem} from '@sanity/types'\n\nconst IMPLICIT_FIELDS = ['_id', '_type', '_createdAt', '_updatedAt', '_rev']\n\n// Takes a path array and a schema type and builds a GROQ join every time it enters a reference field\nfunction joinReferences(schemaType: SchemaType, path: string[]): string {\n  const [head, ...tail] = path\n\n  if (!('fields' in schemaType)) {\n    return ''\n  }\n\n  const schemaField = schemaType.fields.find((field) => field.name === head)\n  if (!schemaField) {\n    if (!IMPLICIT_FIELDS.includes(head)) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'The current ordering config targeted the nonexistent field \"%s\" on schema type \"%s\". It should be one of %o',\n        head,\n        schemaType.name,\n        schemaType.fields.map((field) => field.name)\n      )\n    }\n    return ''\n  }\n\n  if ('to' in schemaField.type && schemaField.type.name === 'reference') {\n    const refTypes = schemaField.type.to\n    return `${head}->{${refTypes.map((refType) => joinReferences(refType, tail)).join(',')}}`\n  }\n\n  const tailFields = tail.length > 0 && joinReferences(schemaField.type, tail)\n  const tailWrapper = tailFields ? `{${tailFields}}` : ''\n  return tail.length > 0 ? `${head}${tailWrapper}` : head\n}\n\nexport function getExtendedProjection(schemaType: SchemaType, orderBy: SortOrderingItem[]): string {\n  return orderBy.map((ordering) => joinReferences(schemaType, ordering.field.split('.'))).join(', ')\n}\n", "import {SortOrdering} from '@sanity/types'\n\nexport const ORDER_BY_UPDATED_AT: SortOrdering = {\n  title: 'Last edited',\n  name: 'lastEditedDesc',\n  by: [{field: '_updatedAt', direction: 'desc'}],\n}\n\nexport const ORDER_BY_CREATED_AT: SortOrdering = {\n  title: 'Created',\n  name: 'lastCreatedDesc',\n  by: [{field: '_createdAt', direction: 'desc'}],\n}\n\nexport const DEFAULT_SELECTED_ORDERING_OPTION = ORDER_BY_UPDATED_AT\n\nexport const DEFAULT_ORDERING_OPTIONS: SortOrdering[] = [\n  ORDER_BY_UPDATED_AT, // _updatedAt\n  ORDER_BY_CREATED_AT, // _createdAt\n]\n", "import {SchemaType, SortOrdering, SortOrderingItem} from '@sanity/types'\nimport {SortIcon} from '@sanity/icons'\nimport {getExtendedProjection} from './util/getExtendedProjection'\nimport {Intent} from './Intent'\nimport {DEFAULT_ORDERING_OPTIONS} from './Sort'\nimport {SerializeOptions, Serializable, SerializePath} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {StructureContext} from './types'\n\n/** @internal */\nexport function maybeSerializeMenuItem(\n  item: MenuItem | MenuItemBuilder,\n  index: number,\n  path: SerializePath\n): MenuItem {\n  return item instanceof MenuItemBuilder ? item.serialize({path, index}) : item\n}\n\n/** @beta */\nexport type MenuItemActionType =\n  | string\n  | ((params: Record<string, string> | undefined, scope?: any) => void)\n\n/** @beta */\nexport type MenuItemParamsType = Record<string, string | unknown | undefined>\n\n/** @beta */\nexport interface MenuItem {\n  title: string\n  action?: MenuItemActionType\n  intent?: Intent\n  group?: string\n  // TODO: align these with TemplateResponse['icon']\n  icon?: React.ComponentType | React.ReactNode\n  params?: MenuItemParamsType\n  showAsAction?: boolean\n}\n\n/** @beta */\nexport type PartialMenuItem = Partial<MenuItem>\n\n/** @beta */\nexport class MenuItemBuilder implements Serializable<MenuItem> {\n  protected spec: PartialMenuItem\n\n  constructor(protected _context: StructureContext, spec?: MenuItem) {\n    this.spec = spec ? spec : {}\n  }\n\n  action(action: MenuItemActionType): MenuItemBuilder {\n    return this.clone({action})\n  }\n\n  getAction(): PartialMenuItem['action'] {\n    return this.spec.action\n  }\n\n  intent(intent: Intent): MenuItemBuilder {\n    return this.clone({intent})\n  }\n\n  getIntent(): PartialMenuItem['intent'] {\n    return this.spec.intent\n  }\n\n  title(title: string): MenuItemBuilder {\n    return this.clone({title})\n  }\n\n  getTitle(): string | undefined {\n    return this.spec.title\n  }\n\n  group(group: string): MenuItemBuilder {\n    return this.clone({group})\n  }\n\n  getGroup(): PartialMenuItem['group'] {\n    return this.spec.group\n  }\n\n  icon(icon: React.ComponentType | React.ReactNode): MenuItemBuilder {\n    return this.clone({icon})\n  }\n\n  getIcon(): PartialMenuItem['icon'] {\n    return this.spec.icon\n  }\n\n  params(params: MenuItemParamsType): MenuItemBuilder {\n    return this.clone({params})\n  }\n\n  getParams(): PartialMenuItem['params'] {\n    return this.spec.params\n  }\n\n  showAsAction(showAsAction = true): MenuItemBuilder {\n    return this.clone({showAsAction: Boolean(showAsAction)})\n  }\n\n  getShowAsAction(): PartialMenuItem['showAsAction'] {\n    return this.spec.showAsAction\n  }\n\n  serialize(options: SerializeOptions = {path: []}): MenuItem {\n    const {title, action, intent} = this.spec\n    if (!title) {\n      const hint = typeof action === 'string' ? `action: \"${action}\"` : undefined\n      throw new SerializeError(\n        '`title` is required for menu item',\n        options.path,\n        options.index,\n        hint\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    if (!action && !intent) {\n      throw new SerializeError(\n        `\\`action\\` or \\`intent\\` required for menu item with title ${this.spec.title}`,\n        options.path,\n        options.index,\n        `\"${title}\"`\n      ).withHelpUrl(HELP_URL.ACTION_OR_INTENT_REQUIRED)\n    }\n\n    if (intent && action) {\n      throw new SerializeError(\n        'cannot set both `action` AND `intent`',\n        options.path,\n        options.index,\n        `\"${title}\"`\n      ).withHelpUrl(HELP_URL.ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE)\n    }\n\n    return {...this.spec, title}\n  }\n\n  clone(withSpec?: PartialMenuItem): MenuItemBuilder {\n    const builder = new MenuItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport interface SortMenuItem extends MenuItem {\n  params: {\n    by: SortOrderingItem[]\n  }\n}\n\n/** @internal */\nexport function getOrderingMenuItem(\n  context: StructureContext,\n  ordering: SortOrdering,\n  extendedProjection?: string\n): MenuItemBuilder {\n  return new MenuItemBuilder(context)\n    .group('sorting')\n    .title(`Sort by ${ordering.title}`)\n    .icon(SortIcon)\n    .action('setSortOrder')\n    .params({by: ordering.by, extendedProjection})\n}\n\n/** @internal */\nexport function getOrderingMenuItemsForSchemaType(\n  context: StructureContext,\n  typeName: SchemaType | string\n): MenuItemBuilder[] {\n  const {schema} = context\n  const type = typeof typeName === 'string' ? schema.get(typeName) : typeName\n  if (!type || !('orderings' in type)) {\n    return []\n  }\n\n  return (\n    type.orderings ? type.orderings.concat(DEFAULT_ORDERING_OPTIONS) : DEFAULT_ORDERING_OPTIONS\n  ).map((ordering: SortOrdering) =>\n    getOrderingMenuItem(context, ordering, getExtendedProjection(type, ordering.by))\n  )\n}\n", "import {SerializeOptions, Serializable, SerializePath} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {StructureContext} from './types'\n\n/** @internal */\nexport function maybeSerializeMenuItemGroup(\n  item: MenuItemGroup | MenuItemGroupBuilder,\n  index: number,\n  path: SerializePath\n): MenuItemGroup {\n  return item instanceof MenuItemGroupBuilder ? item.serialize({path, index}) : item\n}\n\n/** @beta */\nexport interface MenuItemGroup {\n  id: string\n  title: string\n}\n\n/** @beta */\nexport class MenuItemGroupBuilder implements Serializable<MenuItemGroup> {\n  protected _id: string\n  protected _title: string\n\n  constructor(protected _context: StructureContext, spec?: MenuItemGroup) {\n    this._id = spec ? spec.id : ''\n    this._title = spec ? spec.title : ''\n  }\n\n  id(id: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {id, title: this._title})\n  }\n\n  getId(): string {\n    return this._id\n  }\n\n  title(title: string): MenuItemGroupBuilder {\n    return new MenuItemGroupBuilder(this._context, {id: this._id, title})\n  }\n\n  getTitle(): string {\n    return this._title\n  }\n\n  serialize(options: SerializeOptions = {path: []}): MenuItemGroup {\n    const {_id, _title} = this\n    if (!_id) {\n      throw new SerializeError(\n        '`id` is required for a menu item group',\n        options.path,\n        options.index,\n        _title\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!_title) {\n      throw new SerializeError(\n        '`title` is required for a menu item group',\n        options.path,\n        _id\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: _id,\n      title: _title,\n    }\n  }\n}\n", "import {SerializeError} from '../SerializeError'\nimport {SerializePath} from '../StructureNodes'\n\nexport const disallowedPattern = /([^A-Za-z0-9-_.])/\n\nexport function validateId(\n  id: string,\n  parentPath: SerializePath,\n  pathSegment: string | number | undefined\n): string {\n  if (typeof id !== 'string') {\n    throw new SerializeError(\n      `Structure node id must be of type string, got ${typeof id}`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  const [disallowedChar] = id.match(disallowedPattern) || []\n  if (disallowedChar) {\n    throw new SerializeError(\n      `Structure node id cannot contain character \"${disallowedChar}\"`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  if (id.startsWith('__edit__')) {\n    throw new SerializeError(\n      `Structure node id cannot start with __edit__`,\n      parentPath,\n      pathSegment\n    )\n  }\n\n  return id\n}\n", "import {camelCase} from 'lodash'\nimport getSlug from 'speakingurl'\nimport {disallowedPattern} from './validateId'\n\nexport function getStructureNodeId(title: string, id?: string): string {\n  if (id) {\n    return id\n  }\n\n  const camelCased = camelCase(title)\n\n  return disallowedPattern.test(camelCased) ? camelCase(getSlug(title)) : camelCased\n}\n", "import {SerializeOptions, StructureNode, Serializable, Child} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {MenuItem, MenuItemBuilder, maybeSerializeMenuItem} from './MenuItem'\nimport {MenuItemGroup, MenuItemGroupBuilder, maybeSerializeMenuItemGroup} from './MenuItemGroup'\nimport {validateId} from './util/validateId'\nimport {UserComponent} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\n\n/** @beta */\n// TODO: rename to `StructureComponent` since it clashes with React?\nexport interface Component extends StructureNode {\n  component: UserComponent\n  child?: Child\n  menuItems: MenuItem[]\n  menuItemGroups: MenuItemGroup[]\n  options: {[key: string]: unknown}\n}\n\n/** @beta */\nexport interface ComponentInput extends StructureNode {\n  component: UserComponent\n  child?: Child\n  options?: {[key: string]: unknown}\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/** @beta */\nexport interface BuildableComponent extends Partial<StructureNode> {\n  component?: UserComponent\n  child?: Child\n  options?: {[key: string]: unknown}\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/** @beta */\nexport class ComponentBuilder implements Serializable<Component> {\n  protected spec: BuildableComponent\n\n  constructor(spec?: ComponentInput) {\n    this.spec = {options: {}, ...(spec ? spec : {})}\n  }\n\n  id(id: string): ComponentBuilder {\n    return this.clone({id})\n  }\n\n  getId(): BuildableComponent['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ComponentBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  getTitle(): BuildableComponent['title'] {\n    return this.spec.title\n  }\n\n  child(child: Child): ComponentBuilder {\n    return this.clone({child})\n  }\n\n  getChild(): BuildableComponent['child'] {\n    return this.spec.child\n  }\n\n  component(component: UserComponent): ComponentBuilder {\n    return this.clone({component})\n  }\n\n  getComponent(): BuildableComponent['component'] {\n    return this.spec.component\n  }\n\n  options(options: {[key: string]: unknown}): ComponentBuilder {\n    return this.clone({options})\n  }\n\n  getOptions(): NonNullable<BuildableComponent['options']> {\n    return this.spec.options || {}\n  }\n\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[]): ComponentBuilder {\n    return this.clone({menuItems})\n  }\n\n  getMenuItems(): BuildableComponent['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ComponentBuilder {\n    return this.clone({menuItemGroups})\n  }\n\n  getMenuItemGroups(): BuildableComponent['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  serialize(options: SerializeOptions = {path: []}): Component {\n    const {id, title, child, options: componentOptions, component} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for `component` structure item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!component) {\n      throw new SerializeError(\n        '`component` is required for `component` structure item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      type: 'component',\n      child,\n      component,\n      options: componentOptions || {},\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, options.path)\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, options.path)\n      ),\n    }\n  }\n\n  clone(withSpec?: BuildableComponent): ComponentBuilder {\n    const builder = new ComponentBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n", "import type {SanityClient} from '@sanity/client'\nimport {\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  getDraftId,\n  getPublishedId,\n  type SourceClientOptions,\n} from 'sanity'\n\nexport async function resolveTypeForDocument(\n  getClient: (options: SourceClientOptions) => SanityClient,\n  id: string\n): Promise<string | undefined> {\n  const query = '*[_id in [$documentId, $draftId]]._type'\n  const documentId = getPublishedId(id)\n  const draftId = getDraftId(id)\n\n  const types = await getClient(DEFAULT_STUDIO_CLIENT_OPTIONS).fetch(\n    query,\n    {documentId, draftId},\n    {tag: 'structure.resolve-type'}\n  )\n\n  return types[0]\n}\n", "import {kebabCase} from 'lodash'\nimport {Serializable, SerializeOptions, SerializePath} from '../StructureNodes'\nimport {HELP_URL, SerializeError} from '../SerializeError'\nimport {validateId} from '../util/validateId'\nimport {View} from '../types'\nimport {ComponentViewBuilder} from './ComponentView'\nimport {FormViewBuilder} from './FormView'\n\n/** @beta */\nexport interface BaseView {\n  id: string\n  title: string\n  icon?: React.ComponentType | React.ReactNode\n}\n\n/** @beta */\nexport abstract class GenericViewBuilder<TView extends Partial<BaseView>, ConcreteImpl>\n  implements Serializable<BaseView>\n{\n  protected spec: TView = {} as TView\n\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n\n  getId(): TView['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: this.spec.id || kebabCase(title)})\n  }\n\n  getTitle(): TView['title'] {\n    return this.spec.title\n  }\n\n  icon(icon: React.ComponentType | React.ReactNode): ConcreteImpl {\n    return this.clone({icon})\n  }\n\n  getIcon(): TView['icon'] {\n    return this.spec.icon\n  }\n\n  serialize(options: SerializeOptions = {path: []}): BaseView {\n    const {id, title, icon} = this.spec\n    if (!id) {\n      throw new SerializeError(\n        '`id` is required for view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!title) {\n      throw new SerializeError(\n        '`title` is required for view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.TITLE_REQUIRED)\n    }\n\n    return {\n      id: validateId(id, options.path, options.index),\n      title,\n      icon,\n    }\n  }\n\n  abstract clone(withSpec?: Partial<BaseView>): ConcreteImpl\n}\n\nfunction isSerializable(view: BaseView | Serializable<BaseView>): view is Serializable<BaseView> {\n  return typeof (view as Serializable<BaseView>).serialize === 'function'\n}\n\n/** @internal */\nexport function maybeSerializeView(\n  item: View | Serializable<View>,\n  index: number,\n  path: SerializePath\n): View {\n  return isSerializable(item) ? item.serialize({path, index}) : item\n}\n\n/** @beta */\nexport type ViewBuilder = ComponentViewBuilder | FormViewBuilder\n", "import {SerializeOptions} from '../StructureNodes'\nimport {SerializeError, HELP_URL} from '../SerializeError'\nimport type {UserViewComponent} from '../types'\nimport {BaseView, GenericViewBuilder} from './View'\nimport {isRecord} from 'sanity'\n\n/** @beta */\nexport interface ComponentView<TOptions = Record<string, any>> extends BaseView {\n  type: 'component'\n  component: UserViewComponent\n  options: TOptions\n}\n\nconst isComponentSpec = (spec: unknown): spec is ComponentView =>\n  isRecord(spec) && spec.type === 'component'\n\n/** @beta */\nexport class ComponentViewBuilder extends GenericViewBuilder<\n  Partial<ComponentView>,\n  ComponentViewBuilder\n> {\n  protected spec: Partial<ComponentView>\n\n  constructor(componentOrSpec?: UserViewComponent | Partial<ComponentView>) {\n    const spec = isComponentSpec(componentOrSpec) ? {...componentOrSpec} : {options: {}}\n\n    super()\n    this.spec = spec\n\n    const userComponent =\n      typeof componentOrSpec === 'function' ? componentOrSpec : this.spec.component\n\n    if (userComponent) {\n      // Because we're cloning, this'll return a new instance, so grab the spec from it\n      this.spec = this.component(userComponent).spec\n    }\n  }\n\n  component(component: UserViewComponent): ComponentViewBuilder {\n    return this.clone({component})\n  }\n\n  getComponent(): Partial<ComponentView>['component'] {\n    return this.spec.component\n  }\n\n  options(options: {[key: string]: any}): ComponentViewBuilder {\n    return this.clone({options})\n  }\n\n  getOptions(): ComponentView['options'] {\n    return this.spec.options || {}\n  }\n\n  serialize(options: SerializeOptions = {path: []}): ComponentView {\n    const base = super.serialize(options)\n\n    const component = this.spec.component\n    if (typeof component !== 'function') {\n      throw new SerializeError(\n        '`component` is required and must be a function for `component()` view item',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.COMPONENT_REQUIRED)\n    }\n\n    return {\n      ...base,\n      component,\n      options: this.spec.options || {},\n      type: 'component',\n    }\n  }\n\n  clone(withSpec?: Partial<ComponentView>): ComponentViewBuilder {\n    const builder = new ComponentViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n", "import {SerializeOptions} from '../StructureNodes'\nimport {BaseView, GenericViewBuilder} from './View'\n\n/** @beta */\nexport interface FormView extends BaseView {\n  type: 'form'\n}\n\n/** @beta */\nexport class FormViewBuilder extends GenericViewBuilder<Partial<BaseView>, FormViewBuilder> {\n  protected spec: Partial<FormView>\n\n  constructor(spec?: Partial<FormView>) {\n    super()\n    this.spec = {id: 'editor', title: 'Editor', ...(spec ? spec : {})}\n  }\n\n  serialize(options: SerializeOptions = {path: []}): FormView {\n    return {\n      ...super.serialize(options),\n      type: 'form',\n    }\n  }\n\n  clone(withSpec?: Partial<FormView>): FormViewBuilder {\n    const builder = new FormViewBuilder()\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n", "import type {UserViewComponent} from '../types'\nimport {ComponentView, ComponentViewBuilder} from './ComponentView'\nimport {FormView, FormViewBuilder} from './FormView'\n\nexport * from './FormView'\nexport * from './ComponentView'\nexport * from './View'\n\n/** @internal */\nexport const form = (spec?: Partial<FormView>): FormViewBuilder => new FormViewBuilder(spec)\n\n/** @internal */\nexport const component = (\n  componentOrSpec?: UserViewComponent | Partial<ComponentView>\n): ComponentViewBuilder => new ComponentViewBuilder(componentOrSpec)\n", "import {uniq} from 'lodash'\nimport {SchemaType} from '@sanity/types'\nimport {resolveTypeForDocument} from './util/resolveTypeForDocument'\nimport {ChildResolver} from './ChildResolver'\nimport {SerializeOptions, Serializable, Child, DocumentNode, EditorNode} from './StructureNodes'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {validateId} from './util/validateId'\nimport {ViewBuilder, maybeSerializeView} from './views/View'\nimport {form} from './views'\nimport type {StructureContext, View} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\n\nconst createDocumentChildResolver =\n  ({resolveDocumentNode, getClient}: StructureContext): ChildResolver =>\n  async (itemId, {params, path}) => {\n    let type = params.type\n\n    const parentPath = path.slice(0, path.length - 1)\n    const currentSegment = path[path.length - 1]\n\n    if (!type) {\n      type = await resolveTypeForDocument(getClient, itemId)\n    }\n\n    if (!type) {\n      throw new SerializeError(\n        `Failed to resolve document, and no type provided in parameters.`,\n        parentPath,\n        currentSegment\n      )\n    }\n\n    return resolveDocumentNode({documentId: itemId, schemaType: type})\n  }\n\n/** @beta */\nexport interface DocumentOptions {\n  id: string\n  type: string\n  template?: string\n  templateParameters?: Record<string, unknown>\n}\n\n/** @beta */\nexport type PartialDocumentNode = {\n  id?: string\n  title?: string\n  child?: Child\n  views?: (View | ViewBuilder)[]\n  options?: Partial<DocumentOptions>\n}\n\n/** @beta */\nexport class DocumentBuilder implements Serializable<DocumentNode> {\n  protected spec: PartialDocumentNode\n\n  constructor(protected _context: StructureContext, spec?: PartialDocumentNode) {\n    this.spec = spec ? spec : {}\n  }\n\n  id(id: string): DocumentBuilder {\n    return this.clone({id})\n  }\n\n  getId(): PartialDocumentNode['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): DocumentBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  getTitle(): PartialDocumentNode['title'] {\n    return this.spec.title\n  }\n\n  child(child: Child): DocumentBuilder {\n    return this.clone({child})\n  }\n\n  getChild(): PartialDocumentNode['child'] {\n    return this.spec.child\n  }\n\n  documentId(documentId: string): DocumentBuilder {\n    // Let's try to be a bit helpful and assign an ID from document ID if none is specified\n    const paneId = this.spec.id || documentId\n    return this.clone({\n      id: paneId,\n      options: {\n        ...(this.spec.options || {}),\n        id: documentId,\n      },\n    })\n  }\n\n  getDocumentId(): Partial<DocumentOptions>['id'] {\n    return this.spec.options?.id\n  }\n\n  schemaType(documentType: SchemaType | string): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        type: typeof documentType === 'string' ? documentType : documentType.name,\n      },\n    })\n  }\n\n  getSchemaType(): Partial<DocumentOptions>['type'] {\n    return this.spec.options?.type\n  }\n\n  initialValueTemplate(templateId: string, parameters?: Record<string, unknown>): DocumentBuilder {\n    return this.clone({\n      options: {\n        ...(this.spec.options || {}),\n        template: templateId,\n        templateParameters: parameters,\n      },\n    })\n  }\n\n  getInitialValueTemplate(): Partial<DocumentOptions>['template'] {\n    return this.spec.options?.template\n  }\n\n  getInitialValueTemplateParameters(): Partial<DocumentOptions>['templateParameters'] {\n    return this.spec.options?.templateParameters\n  }\n\n  views(views: (View | ViewBuilder)[]): DocumentBuilder {\n    return this.clone({views})\n  }\n\n  getViews(): (View | ViewBuilder)[] {\n    return this.spec.views || []\n  }\n\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): DocumentNode {\n    const urlId = path[index || path.length - 1]\n\n    // Try to grab document ID / editor ID from URL if not defined\n    const id = this.spec.id || (urlId && `${urlId}`) || ''\n    const options: Partial<DocumentOptions> = {\n      id,\n      type: undefined,\n      template: undefined,\n      templateParameters: undefined,\n      ...this.spec.options,\n    }\n\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for document nodes',\n        path,\n        index,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options || !options.id) {\n      throw new SerializeError(\n        'document id (`id`) is required for document nodes',\n        path,\n        id,\n        hint\n      ).withHelpUrl(HELP_URL.DOCUMENT_ID_REQUIRED)\n    }\n\n    if (!options || !options.type) {\n      throw new SerializeError(\n        'document type (`schemaType`) is required for document nodes',\n        path,\n        id,\n        hint\n      )\n    }\n\n    const views = (this.spec.views && this.spec.views.length > 0 ? this.spec.views : [form()]).map(\n      (item, i) => maybeSerializeView(item, i, path)\n    )\n\n    const viewIds = views.map((view) => view.id)\n    const dupes = uniq(viewIds.filter((viewId, i) => viewIds.includes(viewId, i + 1)))\n    if (dupes.length > 0) {\n      throw new SerializeError(\n        `document node has views with duplicate IDs: ${dupes.join(',  ')}`,\n        path,\n        id,\n        hint\n      )\n    }\n\n    return {\n      ...this.spec,\n      child: this.spec.child || createDocumentChildResolver(this._context),\n      id: validateId(id, path, index),\n      type: 'document',\n      options: getDocumentOptions(options),\n      views,\n    }\n  }\n\n  clone(withSpec: PartialDocumentNode = {}): DocumentBuilder {\n    const builder = new DocumentBuilder(this._context)\n    const options = {...(this.spec.options || {}), ...(withSpec.options || {})}\n    builder.spec = {...this.spec, ...withSpec, options}\n    return builder\n  }\n}\n\nfunction getDocumentOptions(spec: Partial<DocumentOptions>): DocumentOptions {\n  const opts: DocumentOptions = {\n    id: spec.id || '',\n    type: spec.type || '*',\n  }\n\n  if (spec.template) {\n    opts.template = spec.template\n  }\n\n  if (spec.templateParameters) {\n    opts.templateParameters = spec.templateParameters\n  }\n\n  return opts\n}\n\n/** @internal */\nexport function documentFromEditor(context: StructureContext, spec?: EditorNode): DocumentBuilder {\n  let doc = spec?.type\n    ? // Use user-defined document fragment as base if possible\n      context.resolveDocumentNode({schemaType: spec.type})\n    : // Fall back to plain old document builder\n      new DocumentBuilder(context)\n\n  if (!spec) return doc\n\n  const {id, type, template, templateParameters} = spec.options\n  doc = doc.id(spec.id).documentId(id)\n\n  if (type) {\n    doc = doc.schemaType(type)\n  }\n  if (template) {\n    doc = doc.initialValueTemplate(template, templateParameters)\n  }\n  if (spec.child) {\n    doc = doc.child(spec.child)\n  }\n\n  return doc\n}\n\n/** @internal */\nexport function documentFromEditorWithInitialValue(\n  {resolveDocumentNode, templates}: StructureContext,\n  templateId: string,\n  parameters?: Record<string, unknown>\n): DocumentBuilder {\n  const template = templates.find((t) => t.id === templateId)\n\n  if (!template) {\n    throw new Error(`Template with ID \"${templateId}\" not defined`)\n  }\n\n  return resolveDocumentNode({schemaType: template.schemaType}).initialValueTemplate(\n    templateId,\n    parameters\n  )\n}\n", "export const layoutOptions = ['default', 'card', 'media', 'detail', 'block']\n", "import {PartialDocumentList, getTypeNamesFromFilter} from './DocumentList'\nimport {StructureNode} from './StructureNodes'\n\n/** @beta */\nexport type IntentJsonParams = {[key: string]: any}\n\n/** @beta */\nexport type BaseIntentParams = {\n  type?: string\n  id?: string\n  template?: string\n}\n\n/** @internal */\nexport const DEFAULT_INTENT_HANDLER = Symbol('Document type list canHandleIntent')\n\n/** @beta */\nexport type IntentParams = BaseIntentParams | [BaseIntentParams, IntentJsonParams]\n\n/** @beta */\n// TODO: intents should be unified somewhere\nexport interface Intent {\n  type: string\n  params?: IntentParams\n}\n\n/** @beta */\nexport interface IntentChecker {\n  (\n    intentName: string,\n    params: {[key: string]: any},\n    context: {pane: StructureNode; index: number}\n  ): boolean\n  identity?: symbol\n}\n\n/** @internal */\nexport const defaultIntentChecker: IntentChecker = (intentName, params, {pane}): boolean => {\n  const isEdit = intentName === 'edit'\n  const isCreate = intentName === 'create'\n  const typedSpec = pane as PartialDocumentList\n  const paneFilter = typedSpec.options?.filter || ''\n  const paneParams = typedSpec.options?.params || {}\n  const typeNames = typedSpec.schemaTypeName\n    ? [typedSpec.schemaTypeName]\n    : getTypeNamesFromFilter(paneFilter, paneParams)\n\n  const initialValueTemplates = typedSpec.initialValueTemplates || []\n\n  if (isCreate && params.template) {\n    return initialValueTemplates.some((tpl) => tpl.templateId === params.template)\n  }\n\n  return (\n    (isEdit && params.id && typeNames.includes(params.type)) ||\n    (isCreate && typeNames.includes(params.type))\n  )\n}\n\ndefaultIntentChecker.identity = DEFAULT_INTENT_HANDLER\n", "import {pickBy} from 'lodash'\nimport {ComposeIcon} from '@sanity/icons'\nimport {HELP_URL, SerializeError} from './SerializeError'\nimport {Serializable, SerializeOptions, SerializePath} from './StructureNodes'\nimport {MenuItemBuilder, MenuItem} from './MenuItem'\nimport {IntentParams} from './Intent'\nimport {StructureContext} from './types'\nimport {InitialValueTemplateItem} from 'sanity'\n\n/** @beta */\nexport class InitialValueTemplateItemBuilder implements Serializable<InitialValueTemplateItem> {\n  protected spec: Partial<InitialValueTemplateItem>\n\n  constructor(protected _context: StructureContext, spec?: Partial<InitialValueTemplateItem>) {\n    this.spec = spec ? spec : {}\n  }\n\n  id(id: string): InitialValueTemplateItemBuilder {\n    return this.clone({id})\n  }\n\n  getId(): Partial<InitialValueTemplateItem>['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): InitialValueTemplateItemBuilder {\n    return this.clone({title})\n  }\n\n  getTitle(): Partial<InitialValueTemplateItem>['title'] {\n    return this.spec.title\n  }\n\n  description(description: string): InitialValueTemplateItemBuilder {\n    return this.clone({description})\n  }\n\n  getDescription(): Partial<InitialValueTemplateItem>['description'] {\n    return this.spec.description\n  }\n\n  templateId(templateId: string): InitialValueTemplateItemBuilder {\n    // Let's try to be a bit helpful and assign an ID from template ID if none is specified\n    const paneId = this.spec.id || templateId\n    return this.clone({\n      id: paneId,\n      templateId,\n    })\n  }\n\n  getTemplateId(): Partial<InitialValueTemplateItem>['templateId'] {\n    return this.spec.templateId\n  }\n\n  parameters(parameters: {[key: string]: any}): InitialValueTemplateItemBuilder {\n    return this.clone({parameters})\n  }\n\n  getParameters(): Partial<InitialValueTemplateItem>['parameters'] {\n    return this.spec.parameters\n  }\n\n  serialize({path = [], index, hint}: SerializeOptions = {path: []}): InitialValueTemplateItem {\n    const {spec, _context} = this\n    const {templates} = _context\n\n    if (typeof spec.id !== 'string' || !spec.id) {\n      throw new SerializeError(\n        '`id` is required for initial value template item nodes',\n        path,\n        index,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!spec.templateId) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const template = templates.find((t) => t.id === spec.templateId)\n\n    if (!template) {\n      throw new SerializeError(\n        'template id (`templateId`) is required for initial value template item nodes',\n        path,\n        spec.id,\n        hint\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    return {\n      id: spec.id,\n      templateId: spec.id,\n      schemaType: template.schemaType,\n      type: 'initialValueTemplateItem',\n      description: spec.description || template.description,\n      title: spec.title || template.title,\n      subtitle: spec.subtitle,\n      icon: spec.icon || template.icon,\n      initialDocumentId: spec.initialDocumentId,\n      parameters: spec.parameters,\n    }\n  }\n\n  clone(withSpec: Partial<InitialValueTemplateItem> = {}): InitialValueTemplateItemBuilder {\n    const builder = new InitialValueTemplateItemBuilder(this._context)\n    builder.spec = {...this.spec, ...withSpec}\n    return builder\n  }\n}\n\n/** @internal */\nexport function defaultInitialValueTemplateItems(\n  context: StructureContext\n): InitialValueTemplateItemBuilder[] {\n  const {schema, getStructureBuilder, templates} = context\n\n  // Sort templates by their schema type, in order or definition\n  const typeNames = schema.getTypeNames()\n  const ordered = templates\n    // Don't list templates that require parameters\n    // TODO: this should use the new-document template items instead maybe?\n    .filter((tpl) => !tpl.parameters?.length)\n    .sort((a, b) => typeNames.indexOf(a.schemaType) - typeNames.indexOf(b.schemaType))\n\n  // Create actual template items out of the templates\n  return ordered.map((tpl) => getStructureBuilder().initialValueTemplateItem(tpl.id))\n}\n\n/** @internal */\nexport function maybeSerializeInitialValueTemplateItem(\n  item: InitialValueTemplateItem | InitialValueTemplateItemBuilder,\n  index: number,\n  path: SerializePath\n): InitialValueTemplateItem {\n  return item instanceof InitialValueTemplateItemBuilder ? item.serialize({path, index}) : item\n}\n\n/** @internal */\nexport function menuItemsFromInitialValueTemplateItems(\n  context: StructureContext,\n  templateItems: InitialValueTemplateItem[]\n): MenuItem[] {\n  const {schema, templates} = context\n  return templateItems.map((item) => {\n    const template = templates.find((t) => t.id === item.templateId)\n    const title = item.title || template?.title || 'Create new'\n    const params = pickBy(\n      {type: template && template.schemaType, template: item.templateId},\n      Boolean\n    )\n    const intentParams: IntentParams = item.parameters ? [params, item.parameters] : params\n    const schemaType = template && schema.get(template.schemaType)\n\n    return new MenuItemBuilder(context)\n      .title(title)\n      .icon((template && template.icon) || schemaType?.icon || ComposeIcon)\n      .intent({type: 'create', params: intentParams})\n      .serialize()\n  })\n}\n", "import {Child, Serializable, SerializeOptions, StructureNode} from './StructureNodes'\nimport {layoutOptions} from './Layout'\nimport {MenuItem, MenuItemBuilder, maybeSerializeMenuItem} from './MenuItem'\nimport {MenuItemGroup, MenuItemGroupBuilder, maybeSerializeMenuItemGroup} from './MenuItemGroup'\nimport {IntentChecker, defaultIntentChecker} from './Intent'\nimport {SerializeError} from './SerializeError'\nimport {\n  InitialValueTemplateItemBuilder,\n  maybeSerializeInitialValueTemplateItem,\n} from './InitialValueTemplateItem'\nimport {validateId} from './util/validateId'\nimport {getStructureNodeId} from './util/getStructureNodeId'\nimport {PreviewLayoutKey, InitialValueTemplateItem} from 'sanity'\n\nfunction noChildResolver() {\n  return undefined\n}\n\n/** @internal */\nexport const shallowIntentChecker: IntentChecker = (intentName, params, {pane, index}): boolean => {\n  return index <= 1 && defaultIntentChecker(intentName, params, {pane, index})\n}\n\n/** @beta */\nexport interface ListDisplayOptions {\n  showIcons?: boolean\n}\n\n/** @beta */\nexport interface BaseGenericList extends StructureNode {\n  defaultLayout?: PreviewLayoutKey\n  canHandleIntent?: IntentChecker\n  displayOptions?: ListDisplayOptions\n  child: Child\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n}\n\n/** @beta */\n// \"POJO\"/verbatim-version - end result\nexport interface GenericList extends BaseGenericList {\n  type: string\n  menuItems: MenuItem[]\n  menuItemGroups: MenuItemGroup[]\n}\n\n/** @beta */\n// Used internally in builder classes to make everything optional\nexport interface BuildableGenericList extends Partial<BaseGenericList> {\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n}\n\n/** @beta */\n// Input version, allows builders and only requires things not inferrable\nexport interface GenericListInput extends StructureNode {\n  id: string\n  title: string\n  menuItems?: (MenuItem | MenuItemBuilder)[]\n  menuItemGroups?: (MenuItemGroup | MenuItemGroupBuilder)[]\n  initialValueTemplates?: (InitialValueTemplateItem | InitialValueTemplateItemBuilder)[]\n  defaultLayout?: PreviewLayoutKey\n  canHandleIntent?: IntentChecker\n  child?: Child\n}\n\n/** @beta */\nexport abstract class GenericListBuilder<TList extends BuildableGenericList, ConcreteImpl>\n  implements Serializable<GenericList>\n{\n  protected initialValueTemplatesSpecified = false\n  protected spec: TList = {} as TList\n\n  id(id: string): ConcreteImpl {\n    return this.clone({id})\n  }\n\n  getId(): TList['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ConcreteImpl {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  getTitle(): TList['title'] {\n    return this.spec.title\n  }\n\n  defaultLayout(defaultLayout: PreviewLayoutKey): ConcreteImpl {\n    return this.clone({defaultLayout})\n  }\n\n  getDefaultLayout(): TList['defaultLayout'] {\n    return this.spec.defaultLayout\n  }\n\n  menuItems(menuItems: (MenuItem | MenuItemBuilder)[] | undefined): ConcreteImpl {\n    return this.clone({menuItems})\n  }\n\n  getMenuItems(): TList['menuItems'] {\n    return this.spec.menuItems\n  }\n\n  menuItemGroups(menuItemGroups: (MenuItemGroup | MenuItemGroupBuilder)[]): ConcreteImpl {\n    return this.clone({menuItemGroups})\n  }\n\n  getMenuItemGroups(): TList['menuItemGroups'] {\n    return this.spec.menuItemGroups\n  }\n\n  child(child: Child): ConcreteImpl {\n    return this.clone({child})\n  }\n\n  getChild(): TList['child'] {\n    return this.spec.child\n  }\n\n  canHandleIntent(canHandleIntent: IntentChecker): ConcreteImpl {\n    return this.clone({canHandleIntent})\n  }\n\n  getCanHandleIntent(): TList['canHandleIntent'] {\n    return this.spec.canHandleIntent\n  }\n\n  showIcons(enabled = true): ConcreteImpl {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcons: enabled},\n    })\n  }\n\n  getShowIcons(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcons : undefined\n  }\n\n  initialValueTemplates(\n    templates:\n      | InitialValueTemplateItem\n      | InitialValueTemplateItemBuilder\n      | Array<InitialValueTemplateItem | InitialValueTemplateItemBuilder>\n  ): ConcreteImpl {\n    this.initialValueTemplatesSpecified = true\n    return this.clone({initialValueTemplates: Array.isArray(templates) ? templates : [templates]})\n  }\n\n  getInitialValueTemplates(): TList['initialValueTemplates'] {\n    return this.spec.initialValueTemplates\n  }\n\n  serialize(options: SerializeOptions = {path: []}): GenericList {\n    const id = this.spec.id || ''\n    const path = options.path\n\n    const defaultLayout = this.spec.defaultLayout\n    if (defaultLayout && !layoutOptions.includes(defaultLayout)) {\n      throw new SerializeError(\n        `\\`layout\\` must be one of ${layoutOptions.map((item) => `\"${item}\"`).join(', ')}`,\n        path,\n        id || options.index,\n        this.spec.title\n      )\n    }\n\n    const initialValueTemplates = (this.spec.initialValueTemplates || []).map((item, i) =>\n      maybeSerializeInitialValueTemplateItem(item, i, path)\n    )\n\n    return {\n      id: validateId(id, options.path, id || options.index),\n      title: this.spec.title,\n      type: 'genericList',\n      defaultLayout,\n      child: this.spec.child || noChildResolver,\n      canHandleIntent: this.spec.canHandleIntent || shallowIntentChecker,\n      displayOptions: this.spec.displayOptions,\n      initialValueTemplates,\n      menuItems: (this.spec.menuItems || []).map((item, i) =>\n        maybeSerializeMenuItem(item, i, path)\n      ),\n      menuItemGroups: (this.spec.menuItemGroups || []).map((item, i) =>\n        maybeSerializeMenuItemGroup(item, i, path)\n      ),\n    }\n  }\n\n  abstract clone(_withSpec?: object): ConcreteImpl\n}\n", "import {SchemaType, SortOrderingItem} from '@sanity/types'\nimport {ComposeIcon} from '@sanity/icons'\nimport {resolveTypeForDocument} from './util/resolveTypeForDocument'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {SerializeOptions, Child} from './StructureNodes'\nimport {ChildResolver, ChildResolverOptions, ItemChild} from './ChildResolver'\nimport {\n  GenericListBuilder,\n  BuildableGenericList,\n  GenericList,\n  GenericListInput,\n} from './GenericList'\nimport {DocumentBuilder} from './Document'\nimport {StructureContext} from './types'\nimport {InitialValueTemplateItem} from 'sanity'\n\nconst validateFilter = (spec: PartialDocumentList, options: SerializeOptions) => {\n  const filter = spec.options?.filter.trim() || ''\n\n  if (['*', '{'].includes(filter[0])) {\n    throw new SerializeError(\n      `\\`filter\\` cannot start with \\`${filter[0]}\\` - looks like you are providing a query, not a filter`,\n      options.path,\n      spec.id,\n      spec.title\n    ).withHelpUrl(HELP_URL.QUERY_PROVIDED_FOR_FILTER)\n  }\n\n  return filter\n}\n\nconst createDocumentChildResolverForItem =\n  (context: StructureContext): ChildResolver =>\n  (itemId: string, options: ChildResolverOptions): ItemChild | Promise<ItemChild> | undefined => {\n    const parentItem = options.parent as DocumentList\n    const template = options.params?.template\n      ? context.templates.find((tpl) => tpl.id === options.params.template)\n      : undefined\n    const type = template\n      ? template.schemaType\n      : parentItem.schemaTypeName || resolveTypeForDocument(context.getClient, itemId)\n\n    return Promise.resolve(type).then((schemaType) =>\n      schemaType\n        ? context.resolveDocumentNode({schemaType, documentId: itemId})\n        : new DocumentBuilder(context).id('editor').documentId(itemId).schemaType('')\n    )\n  }\n\n/** @beta */\nexport interface PartialDocumentList extends BuildableGenericList {\n  options?: DocumentListOptions\n  schemaTypeName?: string\n}\n\n/** @beta */\nexport interface DocumentListInput extends GenericListInput {\n  options: DocumentListOptions\n}\n\n/** @beta */\nexport interface DocumentList extends GenericList {\n  type: 'documentList'\n  options: DocumentListOptions\n  child: Child\n  schemaTypeName?: string\n}\n\n/** @beta */\nexport interface DocumentListOptions {\n  filter: string\n  params?: Record<string, unknown>\n  apiVersion?: string\n  defaultOrdering?: SortOrderingItem[]\n}\n\n/** @beta */\nexport class DocumentListBuilder extends GenericListBuilder<\n  PartialDocumentList,\n  DocumentListBuilder\n> {\n  protected spec: PartialDocumentList\n\n  constructor(protected _context: StructureContext, spec?: DocumentListInput) {\n    super()\n    this.spec = spec || {}\n    this.initialValueTemplatesSpecified = Boolean(spec?.initialValueTemplates)\n  }\n\n  apiVersion(apiVersion: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {filter: ''}), apiVersion}})\n  }\n\n  getApiVersion(): string | undefined {\n    return this.spec.options?.apiVersion\n  }\n\n  filter(filter: string): DocumentListBuilder {\n    return this.clone({options: {...(this.spec.options || {}), filter}})\n  }\n\n  getFilter(): string | undefined {\n    return this.spec.options?.filter\n  }\n\n  schemaType(type: SchemaType | string): DocumentListBuilder {\n    const schemaTypeName = typeof type === 'string' ? type : type.name\n    return this.clone({schemaTypeName})\n  }\n\n  getSchemaType(): string | undefined {\n    return this.spec.schemaTypeName\n  }\n\n  params(params: Record<string, unknown>): DocumentListBuilder {\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), params},\n    })\n  }\n\n  getParams(): Record<string, unknown> | undefined {\n    return this.spec.options?.params\n  }\n\n  defaultOrdering(ordering: SortOrderingItem[]): DocumentListBuilder {\n    if (!Array.isArray(ordering)) {\n      throw new Error('`defaultOrdering` must be an array of order clauses')\n    }\n\n    return this.clone({\n      options: {...(this.spec.options || {filter: ''}), defaultOrdering: ordering},\n    })\n  }\n\n  getDefaultOrdering(): SortOrderingItem[] | undefined {\n    return this.spec.options?.defaultOrdering\n  }\n\n  serialize(options: SerializeOptions = {path: []}): DocumentList {\n    if (typeof this.spec.id !== 'string' || !this.spec.id) {\n      throw new SerializeError(\n        '`id` is required for document lists',\n        options.path,\n        options.index,\n        this.spec.title\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!this.spec.options || !this.spec.options.filter) {\n      throw new SerializeError(\n        '`filter` is required for document lists',\n        options.path,\n        this.spec.id,\n        this.spec.title\n      ).withHelpUrl(HELP_URL.FILTER_REQUIRED)\n    }\n\n    return {\n      ...super.serialize(options),\n      type: 'documentList',\n      schemaTypeName: this.spec.schemaTypeName,\n      child: this.spec.child || createDocumentChildResolverForItem(this._context),\n      options: {\n        ...this.spec.options,\n        apiVersion:\n          this.spec.options.apiVersion ||\n          // If this is a simple type filter, use modern API version - otherwise default to v1\n          (this.spec.options?.filter === '_type == $type' ? '2021-06-07' : '1'),\n        filter: validateFilter(this.spec, options),\n      },\n    }\n  }\n\n  clone(withSpec?: PartialDocumentList): DocumentListBuilder {\n    const builder = new DocumentListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n\n    if (!this.initialValueTemplatesSpecified) {\n      builder.spec.initialValueTemplates = inferInitialValueTemplates(this._context, builder.spec)\n    }\n\n    if (!builder.spec.schemaTypeName) {\n      builder.spec.schemaTypeName = inferTypeName(builder.spec)\n    }\n\n    return builder\n  }\n\n  getSpec(): PartialDocumentList {\n    return this.spec\n  }\n}\n\nfunction inferInitialValueTemplates(\n  context: StructureContext,\n  spec: PartialDocumentList\n): InitialValueTemplateItem[] | undefined {\n  const {document} = context\n  const {schemaTypeName, options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = schemaTypeName\n    ? [schemaTypeName]\n    : Array.from(new Set(getTypeNamesFromFilter(filter, params)))\n\n  if (typeNames.length === 0) {\n    return undefined\n  }\n\n  return typeNames\n    .flatMap((schemaType) =>\n      document.resolveNewDocumentOptions({\n        type: 'structure',\n        schemaType,\n      })\n    )\n    .map((option) => ({...option, icon: ComposeIcon}))\n}\n\nfunction inferTypeName(spec: PartialDocumentList): string | undefined {\n  const {options} = spec\n  const {filter, params} = options || {filter: '', params: {}}\n  const typeNames = getTypeNamesFromFilter(filter, params)\n  return typeNames.length === 1 ? typeNames[0] : undefined\n}\n\n/** @internal */\nexport function getTypeNamesFromFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  let typeNames = getTypeNamesFromEqualityFilter(filter, params)\n\n  if (typeNames.length === 0) {\n    typeNames = getTypeNamesFromInTypesFilter(filter, params)\n  }\n\n  return typeNames\n}\n\n// From _type == \"movie\" || _type == $otherType\nfunction getTypeNamesFromEqualityFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  const pattern =\n    /\\b_type\\s*==\\s*(['\"].*?['\"]|\\$.*?(?:\\s|$))|\\B(['\"].*?['\"]|\\$.*?(?:\\s|$))\\s*==\\s*_type/g\n  const matches: string[] = []\n  let match\n  while ((match = pattern.exec(filter)) !== null) {\n    matches.push(match[1] || match[2])\n  }\n\n  return matches\n    .map((candidate) => {\n      const typeName = candidate[0] === '$' ? params[candidate.slice(1)] : candidate\n      const normalized = ((typeName as string) || '').trim().replace(/^[\"']|[\"']$/g, '')\n      return normalized\n    })\n    .filter(Boolean)\n}\n\n// From _type in [\"dog\", \"cat\", $otherSpecies]\nfunction getTypeNamesFromInTypesFilter(\n  filter: string,\n  params: Record<string, unknown> = {}\n): string[] {\n  const pattern = /\\b_type\\s+in\\s+\\[(.*?)\\]/\n  const matches = filter.match(pattern)\n  if (!matches) {\n    return []\n  }\n\n  return matches[1]\n    .split(/,\\s*/)\n    .map((match) => match.trim().replace(/^[\"']+|[\"']+$/g, ''))\n    .map((item) => (item[0] === '$' ? params[item.slice(1)] : item))\n    .filter(Boolean) as string[]\n}\n", "import {find} from 'lodash'\nimport {SerializePath, SerializeOptions, Divider} from './StructureNodes'\nimport {ChildResolverOptions, ChildResolver} from './ChildResolver'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {ListItem, ListItemBuilder} from './ListItem'\nimport {IntentChecker} from './Intent'\nimport {isDocumentListItem} from './DocumentListItem'\nimport {\n  GenericListBuilder,\n  BuildableGenericList,\n  GenericList,\n  GenericListInput,\n  shallowIntentChecker,\n} from './GenericList'\nimport {StructureContext} from './types'\nimport {isRecord} from 'sanity'\n\nconst getArgType = (thing: ListItem) => {\n  if (thing instanceof ListBuilder) {\n    return 'ListBuilder'\n  }\n\n  if (isPromise<ListItem>(thing)) {\n    return 'Promise'\n  }\n\n  return Array.isArray(thing) ? 'array' : typeof thing\n}\n\nconst isListItem = (item: ListItem | Divider): item is ListItem => {\n  return item.type === 'listItem'\n}\n\nconst defaultCanHandleIntent: IntentChecker = (intentName: string, params, context) => {\n  const pane = context.pane as List\n  const items = pane.items || []\n  return (\n    items\n      .filter(isDocumentListItem)\n      .some((item) => item.schemaType.name === params.type && item._id === params.id) ||\n    shallowIntentChecker(intentName, params, context)\n  )\n}\n\nconst resolveChildForItem: ChildResolver = (itemId: string, options: ChildResolverOptions) => {\n  const parentItem = options.parent as List\n  const items = parentItem.items.filter(isListItem)\n  const target = (items.find((item) => item.id === itemId) || {child: undefined}).child\n\n  if (!target || typeof target !== 'function') {\n    return target\n  }\n\n  return typeof target === 'function' ? target(itemId, options) : target\n}\n\nfunction maybeSerializeListItem(\n  item: ListItem | ListItemBuilder | Divider,\n  index: number,\n  path: SerializePath\n): ListItem | Divider {\n  if (item instanceof ListItemBuilder) {\n    return item.serialize({path, index})\n  }\n\n  const listItem = item as ListItem\n  if (listItem && listItem.type === 'divider') {\n    return item as Divider\n  }\n\n  if (!listItem || listItem.type !== 'listItem') {\n    const gotWhat = (listItem && listItem.type) || getArgType(listItem)\n    const helpText = gotWhat === 'array' ? ' - did you forget to spread (...moreItems)?' : ''\n    throw new SerializeError(\n      `List items must be of type \"listItem\", got \"${gotWhat}\"${helpText}`,\n      path,\n      index\n    ).withHelpUrl(HELP_URL.INVALID_LIST_ITEM)\n  }\n\n  return item\n}\n\nfunction isPromise<T>(thing: unknown): thing is PromiseLike<T> {\n  return isRecord(thing) && typeof thing.then === 'function'\n}\n\n/** @beta */\nexport interface List extends GenericList {\n  type: 'list'\n  items: (ListItem | Divider)[]\n}\n\n/** @beta */\nexport interface ListInput extends GenericListInput {\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/** @beta */\nexport interface BuildableList extends BuildableGenericList {\n  items?: (ListItem | ListItemBuilder | Divider)[]\n}\n\n/** @beta */\nexport class ListBuilder extends GenericListBuilder<BuildableList, ListBuilder> {\n  protected spec: BuildableList\n\n  constructor(protected _context: StructureContext, spec?: ListInput) {\n    super()\n    this.spec = spec ? spec : {}\n    this.initialValueTemplatesSpecified = Boolean(spec && spec.initialValueTemplates)\n  }\n\n  items(items: (ListItemBuilder | ListItem | Divider)[]): ListBuilder {\n    return this.clone({items})\n  }\n\n  getItems(): BuildableList['items'] {\n    return this.spec.items\n  }\n\n  serialize(options: SerializeOptions = {path: []}): List {\n    const id = this.spec.id\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for lists',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    const items = typeof this.spec.items === 'undefined' ? [] : this.spec.items\n    if (!Array.isArray(items)) {\n      throw new SerializeError(\n        '`items` must be an array of items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.LIST_ITEMS_MUST_BE_ARRAY)\n    }\n\n    const path = (options.path || []).concat(id)\n    const serializedItems = items.map((item, index) => maybeSerializeListItem(item, index, path))\n    const dupes = serializedItems.filter((val, i) => find(serializedItems, {id: val.id}, i + 1))\n\n    if (dupes.length > 0) {\n      const dupeIds = dupes.map((item) => item.id).slice(0, 5)\n      const dupeDesc = dupes.length > 5 ? `${dupeIds.join(', ')}...` : dupeIds.join(', ')\n      throw new SerializeError(\n        `List items with same ID found (${dupeDesc})`,\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.LIST_ITEM_IDS_MUST_BE_UNIQUE)\n    }\n\n    return {\n      ...super.serialize(options),\n      type: 'list',\n      canHandleIntent: this.spec.canHandleIntent || defaultCanHandleIntent,\n      child: this.spec.child || resolveChildForItem,\n      items: serializedItems,\n    }\n  }\n\n  clone(withSpec?: BuildableList): ListBuilder {\n    const builder = new ListBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n", "import {SchemaType} from '@sanity/types'\nimport {Observable} from 'rxjs'\nimport {SerializeOptions, Serializable, Collection, CollectionBuilder} from './StructureNodes'\nimport {ChildResolver, ItemChild} from './ChildResolver'\nimport {DocumentListBuilder} from './DocumentList'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {ListBuilder} from './List'\nimport {DocumentBuilder} from './Document'\nimport {ComponentBuilder} from './Component'\nimport {validateId} from './util/validateId'\nimport {StructureContext} from './types'\nimport {getStructureNodeId} from './util/getStructureNodeId'\n\n/** @beta */\nexport type UnserializedListItemChild =\n  | Collection\n  | CollectionBuilder\n  | ChildResolver\n  | Observable<ItemChild>\n\n/** @beta */\nexport type ListItemChild = Collection | ChildResolver | Observable<ItemChild> | undefined\n\n/** @beta */\nexport interface ListItemSerializeOptions extends SerializeOptions {\n  titleIsOptional?: boolean\n}\n\n/** @beta */\nexport interface ListItemDisplayOptions {\n  showIcon?: boolean\n}\n\n/** @beta */\nexport interface ListItemInput {\n  id: string\n  title?: string\n  icon?: React.ComponentType | React.ReactNode\n  child?: ListItemChild\n  displayOptions?: ListItemDisplayOptions\n  schemaType?: SchemaType | string\n}\n\n/** @beta */\nexport interface ListItem {\n  id: string\n  type: string\n  title?: string\n  icon?: React.ComponentType | React.ReactNode\n  child?: ListItemChild\n  displayOptions?: ListItemDisplayOptions\n  schemaType?: SchemaType\n}\n\n/** @beta */\nexport interface UnserializedListItem {\n  id: string\n  title: string\n  icon?: React.ComponentType | React.ReactNode\n  child?: UnserializedListItemChild\n  displayOptions?: ListItemDisplayOptions\n  schemaType?: SchemaType | string\n}\n\n/** @beta */\nexport type PartialListItem = Partial<UnserializedListItem>\n\n/** @beta */\nexport class ListItemBuilder implements Serializable<ListItem> {\n  protected spec: PartialListItem\n\n  constructor(protected _context: StructureContext, spec?: ListItemInput) {\n    this.spec = spec ? spec : {}\n  }\n\n  id(id: string): ListItemBuilder {\n    return this.clone({id})\n  }\n\n  getId(): PartialListItem['id'] {\n    return this.spec.id\n  }\n\n  title(title: string): ListItemBuilder {\n    return this.clone({title, id: getStructureNodeId(title, this.spec.id)})\n  }\n\n  getTitle(): PartialListItem['title'] {\n    return this.spec.title\n  }\n\n  icon(icon: React.ComponentType | React.ReactNode): ListItemBuilder {\n    return this.clone({icon})\n  }\n\n  showIcon(enabled = true): ListItemBuilder {\n    return this.clone({\n      displayOptions: {...(this.spec.displayOptions || {}), showIcon: enabled},\n    })\n  }\n\n  getShowIcon(): boolean | undefined {\n    return this.spec.displayOptions ? this.spec.displayOptions.showIcon : undefined\n  }\n\n  getIcon(): PartialListItem['icon'] {\n    return this.spec.icon\n  }\n\n  child(child: UnserializedListItemChild): ListItemBuilder {\n    return this.clone({child})\n  }\n\n  getChild(): PartialListItem['child'] {\n    return this.spec.child\n  }\n\n  schemaType(schemaType: SchemaType | string): ListItemBuilder {\n    return this.clone({schemaType})\n  }\n\n  getSchemaType(): PartialListItem['schemaType'] {\n    const schemaType = this.spec.schemaType\n\n    if (typeof schemaType === 'string') {\n      return this._context.schema.get(schemaType)\n    }\n\n    return this.spec.schemaType\n  }\n\n  serialize(options: ListItemSerializeOptions = {path: []}): ListItem {\n    const {id, title, child} = this.spec\n    if (typeof id !== 'string' || !id) {\n      throw new SerializeError(\n        '`id` is required for list items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.ID_REQUIRED)\n    }\n\n    if (!options.titleIsOptional && (typeof title !== 'string' || !title)) {\n      throw new SerializeError('`title` is required for list items', options.path, id).withHelpUrl(\n        HELP_URL.TITLE_REQUIRED\n      )\n    }\n\n    let schemaType = this.spec.schemaType\n    if (typeof schemaType === 'string') {\n      const type = this._context.schema.get(schemaType)\n      if (!type) {\n        throw new SerializeError(\n          `Could not find type \"${schemaType}\" in schema`,\n          options.path,\n          id\n        ).withHelpUrl(HELP_URL.SCHEMA_TYPE_NOT_FOUND)\n      }\n\n      schemaType = type\n    }\n\n    const serializeOptions = {path: options.path.concat(id), hint: 'child'}\n    let listChild =\n      child instanceof ComponentBuilder ||\n      child instanceof DocumentListBuilder ||\n      child instanceof DocumentBuilder ||\n      child instanceof ListBuilder\n        ? child.serialize(serializeOptions)\n        : child\n\n    // In the case of a function, create a bound version that will pass the correct serialize\n    // context, so we may lazily resolve it at some point in the future without losing context\n    if (typeof listChild === 'function') {\n      const originalChild = listChild\n      listChild = (itemId, childOptions) => {\n        return originalChild(itemId, {...childOptions, serializeOptions})\n      }\n    }\n\n    return {\n      ...this.spec,\n      id: validateId(id, options.path, options.index),\n      schemaType,\n      child: listChild,\n      title,\n      type: 'listItem',\n    }\n  }\n\n  clone(withSpec?: PartialListItem): ListItemBuilder {\n    const builder = new ListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n", "import {SchemaType} from '@sanity/types'\nimport {SerializeOptions} from './StructureNodes'\nimport {ListItemBuilder, ListItem, UnserializedListItem, ListItemInput} from './ListItem'\nimport {SerializeError, HELP_URL} from './SerializeError'\nimport {DocumentBuilder} from './Document'\nimport {StructureContext} from './types'\nimport {isRecord} from 'sanity'\n\n/** @beta */\nexport interface DocumentListItemInput extends ListItemInput {\n  schemaType: SchemaType | string\n}\n\n/** @beta */\nexport interface DocumentListItem extends ListItem {\n  schemaType: SchemaType\n  _id: string\n}\n\n/** @beta */\nexport type PartialDocumentListItem = Partial<UnserializedListItem>\n\nconst createDefaultChildResolver =\n  (context: StructureContext, spec: PartialDocumentListItem) => (documentId: string) => {\n    const schemaType =\n      spec.schemaType &&\n      (typeof spec.schemaType === 'string' ? spec.schemaType : spec.schemaType.name)\n\n    return schemaType\n      ? context.resolveDocumentNode({schemaType, documentId})\n      : new DocumentBuilder(context).id('documentEditor').documentId(documentId)\n  }\n\n/** @beta */\nexport class DocumentListItemBuilder extends ListItemBuilder {\n  protected spec: PartialDocumentListItem\n\n  constructor(protected _context: StructureContext, spec?: DocumentListItemInput) {\n    super(_context, spec)\n    this.spec = spec ? spec : {}\n  }\n\n  serialize(options: SerializeOptions = {path: []}): DocumentListItem {\n    const spec = super.serialize({...options, titleIsOptional: true})\n\n    if (!spec.schemaType) {\n      throw new SerializeError(\n        '`schemaType` is required for document list items',\n        options.path,\n        options.index\n      ).withHelpUrl(HELP_URL.SCHEMA_TYPE_REQUIRED)\n    }\n\n    const child = spec.child || createDefaultChildResolver(this._context, spec)\n    return {...spec, child, schemaType: spec.schemaType, _id: spec.id}\n  }\n\n  clone(withSpec?: PartialDocumentListItem): DocumentListItemBuilder {\n    const builder = new DocumentListItemBuilder(this._context)\n    builder.spec = {...this.spec, ...(withSpec || {})}\n    return builder\n  }\n}\n\n/** @internal */\nexport function isDocumentListItem(item: unknown): item is DocumentListItem {\n  return isRecord(item) && typeof item.schemaType !== 'undefined' && typeof item._id === 'string'\n}\n", "import {SchemaType} from '@sanity/types'\nimport {DocumentListBuilder, DocumentListInput, PartialDocumentList} from './DocumentList'\nimport {Child} from './StructureNodes'\nimport {DEFAULT_INTENT_HANDLER} from './Intent'\nimport {GenericListInput} from './GenericList'\nimport {StructureContext} from './types'\n\n/** @beta */\nexport interface DocumentTypeListInput extends Partial<GenericListInput> {\n  schemaType: SchemaType | string\n}\n\n/** @beta */\nexport class DocumentTypeListBuilder extends DocumentListBuilder {\n  protected spec: PartialDocumentList\n\n  constructor(protected _context: StructureContext, spec?: DocumentListInput) {\n    super(_context)\n    this.spec = spec ? spec : {}\n  }\n\n  child(child: Child): DocumentTypeListBuilder {\n    return this.cloneWithoutDefaultIntentHandler({child})\n  }\n\n  clone(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    builder.spec = {...this.spec, ...parent.getSpec(), ...(withSpec || {})}\n    return builder\n  }\n\n  cloneWithoutDefaultIntentHandler(withSpec?: PartialDocumentList): DocumentTypeListBuilder {\n    const parent = super.clone(withSpec)\n    const builder = new DocumentTypeListBuilder(this._context)\n    const canHandleIntent = this.spec.canHandleIntent\n    const shouldOverride = canHandleIntent && canHandleIntent.identity === DEFAULT_INTENT_HANDLER\n    const override = shouldOverride ? {canHandleIntent: undefined} : {}\n    builder.spec = {\n      ...parent.getSpec(),\n      ...this.spec,\n      ...(withSpec || {}),\n      ...override,\n    }\n    return builder\n  }\n}\n", "import {SchemaType} from '@sanity/types'\nimport {startCase} from 'lodash'\nimport {StackCompactIcon, StackIcon} from '@sanity/icons'\nimport {MenuItemBuilder, getOrderingMenuItemsForSchemaType} from './MenuItem'\nimport {DEFAULT_SELECTED_ORDERING_OPTION} from './Sort'\nimport {DocumentListBuilder} from './DocumentList'\nimport {ListItemBuilder, ListItem} from './ListItem'\nimport {DocumentTypeListBuilder, DocumentTypeListInput} from './DocumentTypeList'\nimport {defaultIntentChecker} from './Intent'\nimport {List} from './List'\nimport {Collection} from './StructureNodes'\nimport {StructureContext} from './types'\n\nfunction shouldShowIcon(schemaType: SchemaType): boolean {\n  const preview = schemaType.preview\n  return Boolean(preview && (preview.prepare || (preview.select && preview.select.media)))\n}\n\nconst BUNDLED_DOC_TYPES = ['sanity.imageAsset', 'sanity.fileAsset']\n\nfunction isBundledDocType(typeName: string) {\n  return BUNDLED_DOC_TYPES.includes(typeName)\n}\n\nfunction isDocumentType(schemaType: SchemaType) {\n  return schemaType.type?.name === 'document'\n}\n\nfunction isList(collection: Collection): collection is List {\n  return collection.type === 'list'\n}\n\nexport function getDocumentTypes({schema}: StructureContext): string[] {\n  return schema\n    .getTypeNames()\n    .filter((n) => {\n      const schemaType = schema.get(n)\n      return schemaType && isDocumentType(schemaType)\n    })\n    .filter((n) => !isBundledDocType(n))\n}\n\nexport function getDocumentTypeListItems(context: StructureContext): ListItemBuilder[] {\n  const types = getDocumentTypes(context)\n  return types.map((typeName) => getDocumentTypeListItem(context, typeName))\n}\n\nexport function getDocumentTypeListItem(\n  context: StructureContext,\n  typeName: string\n): ListItemBuilder {\n  const {schema} = context\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n\n  return new ListItemBuilder(context)\n    .id(typeName)\n    .title(title)\n    .schemaType(type)\n    .child((id, childContext) => {\n      const parent = childContext.parent as Collection\n      const parentItem = isList(parent)\n        ? (parent.items.find((item) => item.id === id) as ListItem)\n        : null\n\n      let list = getDocumentTypeList(context, typeName)\n      if (parentItem && parentItem.title) {\n        list = list.title(parentItem.title)\n      }\n\n      return list\n    })\n}\n\nexport function getDocumentTypeList(\n  context: StructureContext,\n  typeNameOrSpec: string | DocumentTypeListInput\n): DocumentListBuilder {\n  const {schema, resolveDocumentNode} = context\n\n  const schemaType = typeof typeNameOrSpec === 'string' ? typeNameOrSpec : typeNameOrSpec.schemaType\n  const typeName = typeof schemaType === 'string' ? schemaType : schemaType.name\n  const spec: DocumentTypeListInput =\n    typeof typeNameOrSpec === 'string' ? {schemaType} : typeNameOrSpec\n\n  const type = schema.get(typeName)\n  if (!type) {\n    throw new Error(`Schema type with name \"${typeName}\" not found`)\n  }\n\n  const title = type.title || startCase(typeName)\n  const showIcons = shouldShowIcon(type)\n\n  return new DocumentTypeListBuilder(context)\n    .id(spec.id || typeName)\n    .title(spec.title || title)\n    .filter('_type == $type')\n    .params({type: typeName})\n    .schemaType(type)\n    .showIcons(showIcons)\n    .defaultOrdering(DEFAULT_SELECTED_ORDERING_OPTION.by)\n    .menuItemGroups(\n      spec.menuItemGroups || [\n        {id: 'sorting', title: 'Sort'},\n        {id: 'layout', title: 'Layout'},\n        {id: 'actions', title: 'Actions'},\n      ]\n    )\n    .child(\n      spec.child ||\n        ((documentId: string) => resolveDocumentNode({schemaType: typeName, documentId}))\n    )\n    .canHandleIntent(spec.canHandleIntent || defaultIntentChecker)\n    .menuItems(\n      spec.menuItems || [\n        // Create new (from action button) will be added in serialization step of GenericList\n\n        // Sort by <Y>\n        ...getOrderingMenuItemsForSchemaType(context, type),\n\n        // Display as <Z>\n        new MenuItemBuilder(context)\n          .group('layout')\n          .title('Compact view')\n          .icon(StackCompactIcon)\n          .action('setLayout')\n          .params({layout: 'default'}),\n\n        new MenuItemBuilder(context)\n          .group('layout')\n          .title('Detailed view')\n          .icon(StackIcon)\n          .action('setLayout')\n          .params({layout: 'detail'}),\n\n        // Create new (from menu) will be added in serialization step of GenericList\n      ]\n    )\n}\n", "import {uniqueId} from 'lodash'\nimport type {SchemaType} from '@sanity/types'\nimport {isValidElementType} from 'react-is'\nimport {ListBuilder} from './List'\nimport {\n  getDocumentTypeListItems,\n  getDocumentTypeListItem,\n  getDocumentTypeList,\n} from './documentTypeListItems'\nimport {MenuItemBuilder, getOrderingMenuItemsForSchemaType, getOrderingMenuItem} from './MenuItem'\nimport {ListItemBuilder} from './ListItem'\nimport {MenuItemGroupBuilder} from './MenuItemGroup'\nimport {DocumentListBuilder} from './DocumentList'\nimport type {Divider} from './StructureNodes'\nimport {DocumentBuilder, documentFromEditor, documentFromEditorWithInitialValue} from './Document'\nimport {ComponentInput, ComponentBuilder} from './Component'\nimport {DocumentListItemBuilder} from './DocumentListItem'\nimport * as views from './views'\nimport {\n  InitialValueTemplateItemBuilder,\n  defaultInitialValueTemplateItems,\n  menuItemsFromInitialValueTemplateItems,\n} from './InitialValueTemplateItem'\nimport type {\n  StructureBuilder,\n  UserComponent,\n  StructureContext,\n  DefaultDocumentNodeResolver,\n} from './types'\nimport {Source, getConfigContextFromSource, getPublishedId} from 'sanity'\n\n/** @internal */\nexport interface StructureBuilderOptions {\n  source: Source\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n}\n\nfunction hasIcon(schemaType?: SchemaType | string): boolean {\n  if (!schemaType || typeof schemaType === 'string') {\n    return false\n  }\n\n  return Boolean(schemaType.icon)\n}\n\nfunction getDefaultStructure(context: StructureContext): ListBuilder {\n  const items = getDocumentTypeListItems(context)\n  return new ListBuilder(context)\n    .id('__root__')\n    .title('Content')\n    .items(items)\n    .showIcons(items.some((item) => hasIcon(item.getSchemaType())))\n}\n\n/** @internal */\nexport function createStructureBuilder({\n  defaultDocumentNode,\n  source,\n}: StructureBuilderOptions): StructureBuilder {\n  const configContext = getConfigContextFromSource(source)\n  const context: StructureContext = {\n    ...source,\n    getStructureBuilder: () => structureBuilder,\n    resolveDocumentNode: (options) => {\n      let builder =\n        defaultDocumentNode?.(structureBuilder, {...options, ...configContext}) ||\n        new DocumentBuilder(context)\n\n      if (!builder.getId()) {\n        builder = builder.id('documentEditor')\n      }\n\n      if (options.documentId) {\n        builder = builder.documentId(getPublishedId(options.documentId))\n      }\n\n      return builder.schemaType(options.schemaType)\n    },\n  }\n\n  const structureBuilder: StructureBuilder = {\n    defaults: () => getDefaultStructure(context),\n    documentTypeList: (...args) => getDocumentTypeList(context, ...args),\n    documentTypeListItem: (...args) => getDocumentTypeListItem(context, ...args),\n    documentTypeListItems: (...args) => getDocumentTypeListItems(context, ...args),\n    document: (...args) => new DocumentBuilder(context, ...args),\n    documentWithInitialValueTemplate: (...args) =>\n      documentFromEditorWithInitialValue(context, ...args),\n    defaultDocument: context.resolveDocumentNode,\n\n    list: (...args) => new ListBuilder(context, ...args),\n    listItem: (...args) => new ListItemBuilder(context, ...args),\n\n    menuItem: (...args) => new MenuItemBuilder(context, ...args),\n    menuItemGroup: (...args) => new MenuItemGroupBuilder(context, ...args),\n    menuItemsFromInitialValueTemplateItems: (...args) =>\n      menuItemsFromInitialValueTemplateItems(context, ...args),\n\n    documentList: (...args) => new DocumentListBuilder(context, ...args),\n    documentListItem: (...args) => new DocumentListItemBuilder(context, ...args),\n\n    orderingMenuItem: (...args) => getOrderingMenuItem(context, ...args),\n    orderingMenuItemsForType: (...args) => getOrderingMenuItemsForSchemaType(context, ...args),\n\n    editor: (...args) => documentFromEditor(context, ...args),\n\n    defaultInitialValueTemplateItems: (...args) =>\n      defaultInitialValueTemplateItems(context, ...args),\n\n    initialValueTemplateItem: (\n      templateId: string,\n      parameters?: Record<string, unknown>\n    ): InitialValueTemplateItemBuilder =>\n      new InitialValueTemplateItemBuilder(context, {\n        id: templateId,\n        parameters,\n        templateId,\n      }),\n\n    component: (spec?: ComponentInput | UserComponent) => {\n      return isValidElementType(spec)\n        ? new ComponentBuilder().component(spec as UserComponent)\n        : new ComponentBuilder(spec as ComponentInput)\n    },\n\n    divider: (): Divider => ({id: uniqueId('__divider__'), type: 'divider'}),\n\n    view: views,\n    context,\n  }\n\n  return structureBuilder\n}\n", "import React, {useMemo, useState} from 'react'\nimport {DeskToolContext} from './DeskToolContext'\nimport {createStructureBuilder, DefaultDocumentNodeResolver} from './structureBuilder'\nimport {StructureResolver, UnresolvedPaneNode} from './types'\nimport {useConfigContextFromSource, useDocumentStore, useSource} from 'sanity'\n\n/** @internal */\nexport interface DeskToolProviderProps {\n  structure?: StructureResolver\n  defaultDocumentNode?: DefaultDocumentNodeResolver\n  children: React.ReactNode\n}\n\n/** @internal */\nexport function DeskToolProvider({\n  defaultDocumentNode,\n  structure: resolveStructure,\n  children,\n}: DeskToolProviderProps): React.ReactElement {\n  const [layoutCollapsed, setLayoutCollapsed] = useState(false)\n  const source = useSource()\n  const configContext = useConfigContextFromSource(source)\n  const documentStore = useDocumentStore()\n\n  const S = useMemo(() => {\n    return createStructureBuilder({\n      defaultDocumentNode,\n      source,\n    })\n  }, [defaultDocumentNode, source])\n\n  const rootPaneNode = useMemo(() => {\n    // TODO: unify types and remove cast\n    if (resolveStructure)\n      return resolveStructure(S, {\n        ...configContext,\n        documentStore,\n      }) as UnresolvedPaneNode\n    return S.defaults() as UnresolvedPaneNode\n  }, [S, resolveStructure, configContext, documentStore])\n\n  return (\n    <DeskToolContext.Provider\n      value={useMemo(() => {\n        return {\n          features: {\n            backButton: layoutCollapsed,\n            reviewChanges: !layoutCollapsed,\n            splitPanes: !layoutCollapsed,\n            splitViews: !layoutCollapsed,\n          },\n          layoutCollapsed,\n          setLayoutCollapsed,\n          rootPaneNode,\n          structureContext: S.context,\n        }\n      }, [layoutCollapsed, rootPaneNode, S.context])}\n    >\n      {children}\n    </DeskToolContext.Provider>\n  )\n}\n"],
  "mappings": "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",
  "names": ["isNumber", "camelCase", "kebabCase", "format", "err", "obj", "_setPrototypeOf", "o", "p", "_getPrototypeOf", "CopyToClipboard", "CopyToClipboard", "DocTitle", "props", "document", "documentValue", "schema", "useSchema", "schemaType", "get", "_type", "error", "value", "useValuePreview", "children", "jsxs", "Fragment", "message", "jsx", "title", "style", "color", "TimeAgo", "_ref", "time", "timeAgo", "useTimeAgo", "isClientError", "e", "POLL_INTERVAL", "visiblePoll$", "getVisiblePoll$", "fromEvent", "pipe", "startWith", "map", "visibilityState", "distinctUntilChanged", "switchMap", "visible", "timer", "EMPTY", "shareReplay", "refCount", "bufferSize", "getDocumentExistence", "documentId", "_ref2", "versionedClient", "draftId", "getDraftId", "publishedId", "getPublishedId", "requestOptions", "uri", "getDataUrl", "concat", "json", "query", "excludeContent", "tag", "observable", "request", "_ref3", "omitted", "nonExistant", "filter", "doc", "reason", "length", "some", "id", "fetchCrossDatasetReferences", "context", "checkDocumentId", "of", "totalCount", "references", "currentDataset", "config", "dataset", "url", "catchError", "statusCode", "useInternalReferences", "createHookFromObservableFactory", "_ref4", "documentStore", "referencesClause", "totalClause", "fetchQuery", "listenQuery", "fetch", "listen", "transitions", "throttleTime", "useCrossDatasetReferences", "_ref5", "useReferringDocuments", "useClient", "DEFAULT_STUDIO_CLIENT_OPTIONS", "useDocumentStore", "internalReferences", "isInternalReferencesLoading", "useMemo", "crossDatasetReferences", "isCrossDatasetReferencesLoading", "projectIds", "Array", "from", "Set", "crossDatasetReference", "projectId", "Boolean", "sort", "datasetNames", "datasetName", "hasUnknownDatasetNames", "isLoading", "PublishedStatus", "updatedAt", "_updatedAt", "Tooltip", "portal", "content", "Box", "padding", "Text", "size", "TextWithTone", "tone", "dimmed", "muted", "PublishIcon", "DraftStatus", "EditIcon", "PaneItemPreview", "icon", "layout", "presence", "isRecord", "isValidElement", "isString", "isNumber", "draft", "published", "useMemoObservable", "getPreviewStateObservable", "documentPreviewStore", "_id", "status", "Inline", "space", "DocumentPreviewPresence", "SanityDefaultPreview", "getPreviewValueWithFallback", "isPlaceholder", "missingContext", "Error", "PaneRouterContext", "createContext", "index", "groupIndex", "siblingIndex", "payload", "params", "hasGroupSiblings", "groupLength", "routerPanesState", "BackLink", "ChildLink", "ReferenceChildLink", "handleEditReference", "ParameterizedLink", "replaceCurrent", "closeCurrent", "duplicateCurrent", "setView", "setParams", "setPayload", "navigateIntent", "forwardRef", "ref", "useContext", "panes", "slice", "state", "StateLink", "childId", "childPayload", "childParameters", "rest", "documentType", "parentRefPath", "template", "type", "pathToString", "currentPanes", "nextParams", "useUnique", "nextPayload", "nextState", "currentGroup", "currentSibling", "nextSibling", "nextGroup", "nextPanes", "usePaneRouter", "EMPTY_ARRAY", "ReferencePreviewLink", "onClick", "documentPresence", "useDocumentPresence", "useDocumentPreviewStore", "Link", "useCallback", "LinkComponent", "linkProps", "name", "PreviewCard", "__unstable_focusRing", "as", "radius", "ChevronWrapper", "styled", "_templateObject", "_taggedTemplateLiteral", "CrossDatasetReferencesDetails", "details", "_templateObject2", "CrossDatasetReferencesSummary", "summary", "_templateObject3", "TableContainer", "attrs", "paddingX", "paddingBottom", "_templateObject4", "Table", "table", "_templateObject5", "_ref7", "theme", "rem", "sanity", "_ref8", "_ref9", "DocumentIdFlex", "Flex", "_templateObject6", "ReferencesCard", "Card", "shadow", "marginBottom", "flex", "_templateObject7", "OtherReferenceCount", "difference", "placement", "Container", "width", "InfoOutlineIcon", "ConfirmDeleteDialogBody", "_ref10", "documentTitle", "action", "onReferenceLinkClick", "toast", "useToast", "renderPreviewItem", "item", "UnknownIcon", "subtitle", "documentCount", "toLocaleString", "normalizedDatasetNames", "datasetsCount", "datasetNameList", "join", "WarningOutlineIcon", "marginLeft", "direction", "height", "Stack", "overflow", "borderTop", "align", "marginRight", "DocumentsIcon", "textOverflow", "ChevronDownIcon", "Label", "reference", "_ref11", "gap", "justify", "CopyToClipboard", "text", "onCopy", "push", "Button", "mode", "ClipboardIcon", "fontSize", "DialogBody", "_templateObject8", "LoadingContainer", "_templateObject9", "ConfirmDeleteDialog", "_ref12", "onCancel", "onConfirm", "dialogId", "useId", "capitalizedAction", "substring", "toUpperCase", "showConfirmButton", "Dialog", "header", "footer", "Grid", "columns", "paddingY", "onClose", "onClickOutside", "Spinner", "marginTop", "ConfirmDeleteDialogContainer", "setError", "useState", "handleRetry", "ErrorBoundary", "onCatch", "CONTEXT_MENU_POPOVER_PROPS", "constrainSize", "PaneContextMenuButton", "items", "itemGroups", "onAction", "groups", "defaultGroup", "groupMap", "reduce", "acc", "group", "Object", "values", "g", "MenuButton", "button", "EllipsisVerticalIcon", "menu", "Menu", "MenuDivider", "paddingTop", "itemIndex", "PaneContextMenuItem", "popover", "handleClick", "hotkeys", "shortcut", "split", "IntentButtonOrActionButton", "linkRef", "intent", "IntentLink", "MenuItem", "pressed", "selected", "displayName", "PANE_DEBUG", "PANE_COLLAPSED_WIDTH", "PANE_DEFAULT_MIN_WIDTH", "PaneContext", "PaneLayoutContext", "usePaneLayout", "pane", "Root", "Layer", "_templateObject10", "PaneDivider", "_ref13", "disabled", "element", "resize", "dragging", "setDragging", "handleMouseDown", "event", "preventDefault", "startX", "pageX", "handleMouseMove", "deltaX", "handleMouseUp", "window", "removeEventListener", "addEventListener", "onMouseDown", "_templateObject11", "Pane", "_a", "_b", "_c", "currentMinWidth", "currentMinWidthProp", "currentMaxWidth", "currentMaxWidthProp", "flexProp", "minWidth", "minWidthProp", "maxWidth", "maxWidthProp", "restProps", "rootElement", "setRootElement", "collapse", "collapsed", "layoutCollapsed", "expand", "expandedElement", "mount", "find", "p", "paneIndex", "indexOf", "nextPane", "isLast", "nextCollapsed", "forwardedRef", "useForwardedRef", "setRef", "refValue", "current", "useEffect", "handleCollapse", "handleExpand", "contextValue", "hidden", "divider", "LegacyLayerProvider", "zOffset", "Infinity", "Provider", "BoundaryElementProvider", "usePane", "_templateObject12", "PaneContent", "forwardedAs", "_templateObject13", "RootCard", "_templateObject14", "PaneFooter", "_templateObject15", "Layout", "_templateObject16", "TitleBox", "_templateObject17", "TitleTextSkeleton", "TextSkeleton", "_templateObject18", "TitleText", "_templateObject19", "TABS_SCROLL_PADDING", "TabsBox", "_ref14", "css", "_templateObject20", "rgba", "base", "bg", "PaneHeader", "actions", "backButton", "loading", "subActions", "tabs", "paneElement", "paneRect", "useElementRect", "layoutStyle", "innerHeight", "handleTitleClick", "handleLayoutClick", "LayerProvider", "sizing", "paddingLeft", "animated", "tabIndex", "weight", "paddingRight", "_templateObject21", "IntentButton", "role", "InsufficientPermissionsMessageTooltip", "_ref15", "reveal", "currentUser", "useCurrentUser", "InsufficientPermissionsMessage", "POPOVER_PROPS", "getIntent", "templates", "typeName", "t", "templateId", "baseParams", "initialDocumentId", "parameters", "PaneHeaderCreateButton", "_ref16", "templateItems", "useTemplates", "templatePermissions", "isTemplatePermissionsLoading", "useTemplatePermissions", "nothingGranted", "every", "permission", "granted", "permissionsById", "ComposeIcon", "firstItem", "permissions", "emptyArray", "emptyObject", "isNonNullable", "hashObject", "sortObject", "v", "isArray", "entries", "_ref17", "_ref18", "keyA", "keyB", "localeCompare", "normalize", "JSON", "parse", "stringify", "PaneHeaderActions", "memo", "_ref19", "initialValueTemplateItems", "initialValueTemplateItemsFromStructure", "menuItems", "menuItemGroups", "actionHandlers", "handleAction", "console", "warn", "handler", "actionMenuItems", "contextMenuItems", "nonCreateMenuItem", "partition", "showAsAction", "initialValueTemplateItemFromMenuItems", "menuItemIndex", "intentParams", "templateParams", "_ref20", "initialValueTemplateItem", "description", "combinedInitialValueTemplates", "uniqBy", "actionItem", "actionIndex", "DISABLED_REASON_TITLE", "NOTHING_TO_DELETE", "DeleteAction", "_ref21", "onComplete", "delete", "deleteOp", "useDocumentOperation", "isDeleting", "setIsDeleting", "isConfirmDialogOpen", "setConfirmDialogOpen", "handleCancel", "handleConfirm", "execute", "handle", "isPermissionsLoading", "useDocumentPairPermissions", "TrashIcon", "label", "operationLabel", "onHandle", "dialog", "NO_CHANGES", "NOT_PUBLISHED", "DiscardChangesAction", "_ref22", "liveEdit", "discardChanges", "ResetIcon", "NOTHING_TO_DUPLICATE", "DuplicateAction", "_ref23", "duplicate", "useRouter", "isDuplicating", "setDuplicating", "dupeId", "uuid", "CopyIcon", "HistoryRestoreAction", "_ref24", "revision", "restore", "isRevisionInitialVersion", "isRevisionLatestVersion", "RestoreIcon", "DocumentPaneContext", "useDocumentPane", "documentPane", "LIVE_EDIT_ENABLED", "ALREADY_PUBLISHED", "NOT_READY", "getDisabledReason", "publishedAt", "PublishAction", "publishState", "setPublishState", "publish", "validationStatus", "useValidationStatus", "syncState", "useSyncState", "changesOpen", "onHistoryOpen", "editState", "useEditState", "_rev", "hasValidationErrors", "validation", "isValidationErrorMarker", "publishScheduled", "setPublishScheduled", "isSyncing", "isValidating", "hasDraft", "doPublish", "validationComplete", "didPublish", "delay", "setTimeout", "clearTimeout", "transactionSyncLock", "enabled", "CheckmarkIcon", "UnpublishAction", "_ref25", "unpublish", "UnpublishIcon", "LiveEditBadge", "_DEBUG", "EMPTY_PARAMS", "LOADING_PANE", "Symbol", "activePanes", "setActivePanes", "getIntentState", "routerState", "editDocumentId", "isTemplate", "i", "canHandleIntent", "call", "schemaTypeName", "options", "paneParams", "legacyEditParamsToState", "decodeURIComponent", "err", "encodePanesSegment", "encodeChunks", "encodeURIComponent", "legacyEditParamsToPath", "toState", "pathSegment", "parsePanesSegment", "toPath", "router", "route", "create", "intents", "path", "transform", "panePattern", "isParam", "str", "test", "isPayload", "exclusiveParams", "isTruthy", "parseChunks", "chunks", "initial", "chunk", "key", "tryParseBase64Payload", "firstSibling", "paneIsFirstSibling", "sameAsFirst", "encodedPayload", "btoa", "encodedParams", "entry", "valueFromFirstSibling", "includes", "_ref26", "flat", "parseOldPanesSegment", "restOfSiblings", "segment", "sibling", "omit", "buffer", "match", "payloadChunk", "tryParsePayload", "data", "atob", "documentActions", "documentBadges", "deskTool", "definePlugin", "prevActions", "badges", "prevBadges", "badge", "tools", "MasterDetailIcon", "component", "lazy", "DeskToolContext", "SerializeError", "constructor", "parentPath", "hint", "withHelpUrl", "helpId", "HELP_URL", "IMPLICIT_FIELDS", "joinReferences", "head", "tail", "schemaField", "fields", "field", "refTypes", "to", "refType", "tailFields", "tailWrapper", "getExtendedProjection", "orderBy", "ordering", "ORDER_BY_UPDATED_AT", "by", "ORDER_BY_CREATED_AT", "DEFAULT_SELECTED_ORDERING_OPTION", "DEFAULT_ORDERING_OPTIONS", "maybeSerializeMenuItem", "MenuItemBuilder", "serialize", "_context", "spec", "clone", "getAction", "getTitle", "getGroup", "getIcon", "getParams", "getShowAsAction", "arguments", "undefined", "TITLE_REQUIRED", "ACTION_OR_INTENT_REQUIRED", "ACTION_AND_INTENT_MUTUALLY_EXCLUSIVE", "withSpec", "builder", "getOrderingMenuItem", "extendedProjection", "SortIcon", "getOrderingMenuItemsForSchemaType", "orderings", "maybeSerializeMenuItemGroup", "MenuItemGroupBuilder", "_title", "getId", "ID_REQUIRED", "disallowedPattern", "validateId", "disallowedChar", "startsWith", "getStructureNodeId", "camelCased", "camelCase", "getSlug", "ComponentBuilder", "child", "getChild", "getComponent", "getOptions", "getMenuItems", "getMenuItemGroups", "componentOptions", "resolveTypeForDocument", "getClient", "types", "GenericViewBuilder", "kebabCase", "isSerializable", "view", "maybeSerializeView", "isComponentSpec", "ComponentViewBuilder", "componentOrSpec", "userComponent", "COMPONENT_REQUIRED", "FormViewBuilder", "form", "createDocumentChildResolver", "_ref27", "resolveDocumentNode", "itemId", "_ref28", "currentSegment", "DocumentBuilder", "paneId", "getDocumentId", "getSchemaType", "initialValueTemplate", "templateParameters", "getInitialValueTemplate", "getInitialValueTemplateParameters", "views", "getViews", "urlId", "DOCUMENT_ID_REQUIRED", "viewIds", "dupes", "uniq", "viewId", "getDocumentOptions", "opts", "documentFromEditor", "documentFromEditorWithInitialValue", "_ref29", "layoutOptions", "DEFAULT_INTENT_HANDLER", "defaultIntentChecker", "intentName", "_ref30", "isEdit", "isCreate", "typedSpec", "paneFilter", "typeNames", "getTypeNamesFromFilter", "initialValueTemplates", "tpl", "identity", "InitialValueTemplateItemBuilder", "getDescription", "getTemplateId", "getParameters", "defaultInitialValueTemplateItems", "getStructureBuilder", "getTypeNames", "ordered", "a", "b", "maybeSerializeInitialValueTemplateItem", "menuItemsFromInitialValueTemplateItems", "pickBy", "noChildResolver", "shallowIntentChecker", "_ref31", "GenericListBuilder", "initialValueTemplatesSpecified", "defaultLayout", "getDefaultLayout", "getCanHandleIntent", "showIcons", "displayOptions", "getShowIcons", "getInitialValueTemplates", "validateFilter", "trim", "QUERY_PROVIDED_FOR_FILTER", "createDocumentChildResolverForItem", "parentItem", "parent", "Promise", "resolve", "then", "DocumentListBuilder", "apiVersion", "getApiVersion", "getFilter", "defaultOrdering", "getDefaultOrdering", "FILTER_REQUIRED", "inferInitialValueTemplates", "inferTypeName", "getSpec", "flatMap", "resolveNewDocumentOptions", "option", "getTypeNamesFromEqualityFilter", "getTypeNamesFromInTypesFilter", "pattern", "matches", "exec", "candidate", "normalized", "replace", "getArgType", "thing", "ListBuilder", "isPromise", "isListItem", "defaultCanHandleIntent", "isDocumentListItem", "resolveChildForItem", "target", "maybeSerializeListItem", "ListItemBuilder", "listItem", "gotWhat", "helpText", "INVALID_LIST_ITEM", "getItems", "LIST_ITEMS_MUST_BE_ARRAY", "serializedItems", "val", "dupeIds", "dupeDesc", "LIST_ITEM_IDS_MUST_BE_UNIQUE", "showIcon", "getShowIcon", "titleIsOptional", "SCHEMA_TYPE_NOT_FOUND", "serializeOptions", "listChild", "originalChild", "childOptions", "createDefaultChildResolver", "DocumentListItemBuilder", "SCHEMA_TYPE_REQUIRED", "DocumentTypeListBuilder", "cloneWithoutDefaultIntentHandler", "shouldOverride", "override", "shouldShowIcon", "preview", "prepare", "select", "media", "BUNDLED_DOC_TYPES", "isBundledDocType", "isDocumentType", "isList", "collection", "getDocumentTypes", "_ref32", "n", "getDocumentTypeListItems", "getDocumentTypeListItem", "startCase", "childContext", "list", "getDocumentTypeList", "typeNameOrSpec", "StackCompactIcon", "StackIcon", "hasIcon", "getDefaultStructure", "createStructureBuilder", "_ref33", "defaultDocumentNode", "source", "configContext", "getConfigContextFromSource", "structureBuilder", "defaults", "documentTypeList", "_len", "args", "_key", "documentTypeListItem", "_len2", "_key2", "documentTypeListItems", "_len3", "_key3", "_len4", "_key4", "documentWithInitialValueTemplate", "_len5", "_key5", "defaultDocument", "_len6", "_key6", "_len7", "_key7", "menuItem", "_len8", "_key8", "menuItemGroup", "_len9", "_key9", "_len10", "_key10", "documentList", "_len11", "_key11", "documentListItem", "_len12", "_key12", "orderingMenuItem", "_len13", "_key13", "orderingMenuItemsForType", "_len14", "_key14", "editor", "_len15", "_key15", "_len16", "_key16", "isValidElementType", "uniqueId", "DeskToolProvider", "_ref34", "structure", "resolveStructure", "setLayoutCollapsed", "useSource", "useConfigContextFromSource", "S", "rootPaneNode", "features", "reviewChanges", "splitPanes", "splitViews", "structureContext"]
}
